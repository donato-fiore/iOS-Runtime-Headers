// Headers generated with ktool v2.0.0
// https://github.com/cxnder/ktool | pip3 install k2l
// Platform: IOS | Minimum OS: 16.0.0 | SDK: 16.0.0


#ifndef MKMAPVIEW_H
#define MKMAPVIEW_H

@class UIView, NSMutableArray, NSMutableSet, NSMutableDictionary, UIImageView, NSTimer, UILongPressGestureRecognizer, UITapGestureRecognizer, UIGestureRecognizer, VKMapView, VKLabelMarker, UIView<MKCompassView>, VKRouteContext, VKNavContext, UITextView, UIPanGestureRecognizer, UITraitCollection, UILayoutGuide, NSLayoutConstraint, NSArray, NSString, NSDictionary, GEOMapRegion, UIPinchGestureRecognizer, CLLocation, UIRotationGestureRecognizer, VKVenueBuildingFeatureMarker, VKVenueFeatureMarker;
@protocol MKLocationManagerObserver, MKOverlayContainerViewDelegate, MKMapGestureControllerDelegate, UIGestureRecognizerDelegate, MKVariableDelayTapRecognizerDelegate, MKMapViewRouteContextUpdates, VKMapViewDelegate, VKMapViewCameraDelegate, MKAnnotationMarkerContainer, MKAnnotationManagerDelegate, GEOLogContextDelegate, MKRotationFilterDelegate, GEOConfigChangeListenerDelegate, GEOResourceManifestTileGroupObserver, MKAnnotationContainerViewDelegate, NSCoding, MKMapViewDelegate><MKMapViewDelegatePrivate, OS_dispatch_queue, MKMapViewDelegate, OS_dispatch_group;


#import "MKUsageCounter.h"
#import "MKMapViewInternal.h"
#import "MKAnnotationManager.h"
#import "MKAnnotationContainerView.h"
#import "MKAttributionLabel.h"
#import "MKAppleLogoImageView.h"
#import "MKDebugLocationConsole.h"
#import "_MKEnvironmentLabel.h"
#import "MKMapGestureController.h"
#import "MKOverlayContainerView.h"
#import "MKBasicMapView.h"
#import "MKScaleView.h"
#import "MKUserLocation.h"
#import "MKMapCamera.h"
#import "MKRotationFilter.h"
#import "MKAnnotationView.h"
#import "_MKCustomFeatureStore.h"
#import "MKMapViewLabelMarkerState.h"
#import "MKMapCameraBoundary.h"
#import "MKMapCameraZoomRange.h"
#import "MKMapConfiguration.h"
#import "MKLocationManager.h"
#import "MKPointOfInterestFilter.h"

@interface MKMapView : UIView <MKLocationManagerObserver, MKOverlayContainerViewDelegate, MKMapGestureControllerDelegate, UIGestureRecognizerDelegate, MKVariableDelayTapRecognizerDelegate, MKMapViewRouteContextUpdates, VKMapViewDelegate, VKMapViewCameraDelegate, MKAnnotationMarkerContainer, MKAnnotationManagerDelegate, GEOLogContextDelegate, MKRotationFilterDelegate, GEOConfigChangeListenerDelegate, GEOResourceManifestTileGroupObserver, MKAnnotationContainerViewDelegate, NSCoding>

 {
    NSMutableArray *_whenSizedBlocks;
    NSMutableSet *_annotationViewEventSet;
    NSMutableDictionary *_overlayRendererEventDictionary;
    MKUsageCounter *_usageCounter;
    MKMapViewInternal *_internal;
    UIView *_contentView;
    MKAnnotationManager *_annotationManager;
    MKAnnotationContainerView *_annotationContainer;
    MKAttributionLabel *_attributionLabel;
    MKAppleLogoImageView *_appleLogoImageView;
    id *_annotationRectTest;
    id *_annotationCoordinateTest;
    UIImageView *_attributionBadgeView;
    NSTimer *_startEffectsTimer;
    id<MKMapViewDelegate><MKMapViewDelegatePrivate> *_safeDelegate;
    id<MKMapViewDelegate><MKMapViewDelegatePrivate> *_unsafeDelegate;
    NSUInteger _suspendedEffectsCount;
    NSUInteger _userInteractionDisabledCount;
    NSUInteger _mapType;
    MKDebugLocationConsole *_debugLocationConsole;
    id *_debugConsoleAdditionalInfoProvider;
    _MKEnvironmentLabel *_debugCurrentEnvironmentLabel;
    CGFloat _heading;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    UITapGestureRecognizer *_selectingTapGestureRecognizer;
    UITapGestureRecognizer *_nonselectingTapGestureRecognizer;
    UIGestureRecognizer *_locationConsoleGesture;
    MKMapGestureController *_gestureController;
    MKOverlayContainerView *_overlayContainer;
    NSInteger _userTrackingMode;
    BOOL _userTrackingModeShouldAnimate;
    MKBasicMapView *_basicMapView;
    VKMapView *_mapView;
    VKLabelMarker *_pressedLabelMarker;
    MKScaleView *_scaleView;
    UIView<MKCompassView> *_compassView;
    BOOL _scaleVisible;
    BOOL _compassVisible;
    BOOL _pitchSliderVisible;
    NSInteger _scaleVisibility;
    BOOL _showsCompass;
    UIView *_scrollContainerView;
    MKUserLocation *_userLocation;
    VKRouteContext *_routeContext;
    VKNavContext *_navContext;
    MKMapCamera *_camera;
    id *_showCalloutAfterRegionChangeBlock;
    id *_selectAnnotationViewAfterRedrawBlock;
    UITextView *_vectorKitDebugView;
    UIPanGestureRecognizer *_vectorKitStyleDebugGestureRecognizer;
    CGFloat _verticalYawOverride;
    NSInteger _originalLoopRate;
    NSInteger _preGesturingLoopRate;
    ? _annotationTrackingBehavior;
    id *_topLayoutGuide;
    id *_bottomLayoutGuide;
    NSObject<OS_dispatch_queue> *_lastEffectiveTraitCollectionIsolationQueue;
    UITraitCollection *_lastTraitCollection;
    MKRotationFilter *_rotationFilter;
    MKAnnotationView *_longPressedAnnotationView;
    ? _flags;
    BOOL _hasSetLayoutMargins;
    UILayoutGuide *_edgeInsetsGuide;
    NSLayoutConstraint *_edgeInsetsTopConstraint;
    NSLayoutConstraint *_edgeInsetsLeftConstraint;
    NSLayoutConstraint *_edgeInsetsRightConstraint;
    NSLayoutConstraint *_edgeInsetsBottomConstraint;
    NSUInteger _suspendPropagatingEdgeInsetsCount;
    BOOL _automaticallySnapsToNorth;
    NSInteger _cachedLookAroundAvailability;
    BOOL _forceLayoutOnBoundsChange;
    BOOL _hasPendingEdgeInsetsChange;
    id *_shelbyvilleListener;
    _MKCustomFeatureStore *_annotationsCustomFeatureStore;
    CGFloat _lastYaw;
    BOOL _lastPossiblyVisible;
    NSUInteger _cachedVenueIDWithFocus;
    short _cachedDisplayedFloorOrdinalForVenueWithFocus;
    CLLocationCoordinate2D _oldCenterCoordinate;
    CGFloat _oldHeading;
    CGFloat _oldPitch;
    CGFloat _oldAltitude;
    NSUInteger _compassInsetEdges;
    BOOL _explicitCompassInsetEdges;
    MKMapViewLabelMarkerState *_selectedLabelMarkerState;
    CGFloat _appleLogoImageWidth;
    NSUInteger _compassUpdateNotificationObserversCount;
    NSUInteger _scaleUpdateNotificationObserversCount;
    NSUInteger _mapViewDidFinishRenderingSignpostID;
}


@property (nonatomic) BOOL _annotationViewsAreAddedImmediately;
@property (readonly, nonatomic) ? _centerMapPoint;
@property (readonly, nonatomic) NSInteger _interfaceOrientation;
@property (weak, nonatomic, getter=_safeDelegate, setter=_setSafeDelegate:) NSObject<MKMapViewDelegate> *_safeDelegate;
@property (retain, nonatomic) NSTimer *_startEffectsTimer;
@property (readonly, nonatomic) CGFloat _zoomLevel;
@property (readonly, nonatomic) CGFloat _zoomScale;
@property (nonatomic, getter=_allowsPopoverWhenNotInWindow, setter=_setAllowsPopoverWhenNotInWindow:) BOOL allowsPopoverWhenNotInWindow;
@property (nonatomic, getter=_alwaysShowHeadingIndicator, setter=_setAlwaysShowHeadingIndicatorIfSupported:) BOOL alwaysShowHeadingIndicator;
@property (readonly, nonatomic, getter=_isAnimating) BOOL animating;
@property (readonly, nonatomic, getter=_annotationViews) NSArray *annotationViews;
@property (readonly, nonatomic) CGRect annotationVisibleRect;
@property (readonly, nonatomic) NSArray *annotations;
@property (nonatomic, getter=_applicationState, setter=_setApplicationState:) int applicationState;
@property (readonly, nonatomic) CGRect attributionBadgeBounds;
@property (nonatomic) int attributionCorner; // ivar: _attributionCorner
@property (nonatomic, getter=_attributionInsets, setter=_setAttributionInsets:) UIEdgeInsets attributionInsets; // ivar: _attributionInsets
@property (nonatomic, getter=_attributionLinkDisplayStyle, setter=_setAttributionLinkDisplayStyle:) NSInteger attributionLinkDisplayStyle; // ivar: _attributionLinkDisplayStyle
@property (nonatomic, getter=_automaticallySnapsToNorth, setter=_setAutomaticallySnapsToNorth:) BOOL automaticallySnapsToNorth;
@property (readonly, nonatomic, getter=_calloutShowAnimationGroup) NSObject<OS_dispatch_group> *calloutShowAnimationGroup; // ivar: _calloutShowAnimationGroup
@property (copy, nonatomic) MKMapCamera *camera;
@property (copy, nonatomic) MKMapCameraBoundary *cameraBoundary; // ivar: _cameraBoundary
@property (copy, nonatomic) MKMapCameraZoomRange *cameraZoomRange; // ivar: _cameraZoomRange
@property (readonly, nonatomic, getter=_canEnter3DMode) BOOL canEnter3DMode;
@property (readonly, nonatomic, getter=_canEnter3DModeFlyover) BOOL canEnter3DModeFlyover;
@property (readonly, nonatomic, getter=_canEnterNightMode) BOOL canEnterNightMode;
@property (readonly, nonatomic) BOOL canRotateForHeading;
@property (nonatomic, getter=_canSelectAllLabels, setter=_setCanSelectAllLabels:) BOOL canSelectAllLabels;
@property (nonatomic, getter=_canSelectPOIs, setter=_setCanSelectPOIs:) BOOL canSelectPOIs;
@property (nonatomic) BOOL canShowAttributionBadge;
@property (readonly, nonatomic) BOOL canShowCompass;
@property (readonly, nonatomic, getter=_canShowControls) BOOL canShowControls;
@property (readonly, nonatomic, getter=_canShowFlyover) BOOL canShowFlyover;
@property (readonly, nonatomic) BOOL canShowPitch;
@property (readonly, nonatomic) BOOL canShowZoom;
@property (nonatomic, getter=_cartographicConfiguration, setter=_setCartographicConfiguration:) ? cartographicConfiguration; // ivar: _cartographicConfiguration
@property (nonatomic) CLLocationCoordinate2D centerCoordinate;
@property (readonly, nonatomic, getter=_isChangingRegionForGesture) BOOL changingRegionForGesture;
@property (readonly, nonatomic, getter=_compassDiameter) CGFloat compassDiameter;
@property (nonatomic, getter=isCompassEnabled) BOOL compassEnabled;
@property (nonatomic, getter=_compassInsetEdges, setter=_setCompassInsetEdges:) NSUInteger compassInsetEdges;
@property (nonatomic, getter=_compassInsets, setter=_setCompassInsets:) UIEdgeInsets compassInsets; // ivar: _compassInsets
@property (nonatomic, getter=_isCompassSuppressedForFloorPicker, setter=_setCompassSuppressedForFloorPicker:) BOOL compassSuppressedForFloorPicker; // ivar: _compassSuppressedForFloorPicker
@property (readonly, nonatomic) NSInteger compassViewSize; // ivar: _compassViewSize
@property (readonly, nonatomic) NSInteger compassViewStyle; // ivar: _compassViewStyle
@property (copy, nonatomic) MKMapConfiguration *configuration;
@property (readonly, nonatomic, getter=_currentEnvironmentLabelFrame) CGRect currentEnvironmentLabelFrame;
@property (nonatomic, getter=_currentFlyoverAnimationID, setter=_setCurrentFlyoverAnimationID:) NSUInteger currentFlyoverAnimationID; // ivar: _currentFlyoverAnimationID
@property (readonly, nonatomic, getter=_debugConsole) MKDebugLocationConsole *debugConsole;
@property (copy, nonatomic, getter=_debugConsoleAdditionalInfoProvider, setter=_setDebugConsoleAdditionalInfoProvider:) id *debugConsoleAdditionalInfoProvider;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<MKMapViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic, getter=_detailedDescription) NSString *detailedDescription;
@property (readonly, nonatomic, getter=_detailedDescriptionDictionaryRepresentation) NSDictionary *detailedDescriptionDictionaryRepresentation;
@property (nonatomic, getter=_isDimmingOutsideVenueWithFocus) BOOL dimmingOutsideVenueWithFocus;
@property (nonatomic, getter=_displayedSearchResultsType, setter=_setDisplayedSearchResultsType:) NSInteger displayedSearchResultsType;
@property (readonly, nonatomic, getter=_doubleTapGestureRecognizer) UITapGestureRecognizer *doubleTapGestureRecognizer;
@property (nonatomic, getter=_edgeInsets, setter=_setEdgeInsets:) UIEdgeInsets edgeInsets; // ivar: _edgeInsets
@property (readonly, nonatomic, getter=_edgeInsetsLayoutGuide) UILayoutGuide *edgeInsetsLayoutGuide;
@property (readonly, nonatomic) BOOL effectsEnabled;
@property (readonly, nonatomic, getter=_isHandlingNonselectingTap) BOOL handlingNonselectingTap;
@property (readonly, nonatomic) BOOL hasRenderedSomething;
@property (readonly, nonatomic) BOOL hasUserLocation;
@property (readonly) NSUInteger hash;
@property (readonly) NSUInteger hash;
@property (readonly) NSUInteger hash;
@property (readonly) NSUInteger hash;
@property (nonatomic) BOOL ignoreLocationUpdates;
@property (nonatomic, getter=_isInactive, setter=_setInactive:) BOOL inactive;
@property (nonatomic, getter=_interactionMode, setter=_setInteractionMode:) NSInteger interactionMode; // ivar: _interactionMode
@property (readonly, nonatomic, getter=_isHybridMap) BOOL isHybridMap;
@property (nonatomic, getter=_labelEdgeInsets, setter=_setLabelEdgeInsets:) UIEdgeInsets labelEdgeInsets;
@property (nonatomic) NSInteger labelTextSize;
@property (copy, nonatomic, getter=_labelsDidLayoutCallback, setter=_setLabelsDidLayoutCallback:) id *labelsDidLayoutCallback; // ivar: _labelsDidLayoutCallback
@property (nonatomic, getter=_loadLookAroundAvailability, setter=_setLoadLookAroundAvailability:) BOOL loadLookAroundAvailability;
@property (nonatomic, getter=_localizeLabels, setter=_setLocalizeLabels:) BOOL localizeLabels;
@property (readonly, nonatomic, getter=_locationManager) MKLocationManager *locationManager; // ivar: _locationManager
@property (nonatomic, getter=_isLocationPulseEnabled, setter=_setLocationPulseEnabled:) BOOL locationPulseEnabled;
@property (readonly, nonatomic, getter=_longPressGestureRecognizer) UILongPressGestureRecognizer *longPressGestureRecognizer;
@property (readonly, nonatomic, getter=_lookAroundAvailability) NSInteger lookAroundAvailability;
@property (readonly, nonatomic, getter=_mapLayer) VKMapView *mapLayer;
@property (readonly, nonatomic) GEOMapRegion *mapRegion;
@property (nonatomic) NSUInteger mapType;
@property (readonly, nonatomic, getter=_maximumZoomLevel) CGFloat maximumZoomLevel;
@property (readonly, nonatomic, getter=_minimumZoomLevel) CGFloat minimumZoomLevel;
@property (readonly, nonatomic, getter=_nonselectingTapGestureRecognizer) UITapGestureRecognizer *nonselectingTapGestureRecognizer;
@property (readonly, nonatomic, getter=_oneHandedZoomGestureRecognizer) UIGestureRecognizer *oneHandedZoomGestureRecognizer;
@property (readonly, nonatomic) NSArray *overlays;
@property (nonatomic, getter=_panWithMomentum, setter=_setPanWithMomentum:) BOOL panWithMomentum;
@property (readonly, nonatomic, getter=_panningGestureRecognizer) UIPanGestureRecognizer *panningGestureRecognizer;
@property (readonly, nonatomic, getter=_pinchGestureRecognizer) UIPinchGestureRecognizer *pinchGestureRecognizer;
@property (nonatomic, getter=isPitchEnabled) BOOL pitchEnabled;
@property (readonly, nonatomic, getter=_isPitched) BOOL pitched;
@property (copy, nonatomic) MKPointOfInterestFilter *pointOfInterestFilter; // ivar: _pointOfInterestFilter
@property (retain, nonatomic) CLLocation *predictedUserLocation;
@property (copy, nonatomic) MKMapConfiguration *preferredConfiguration; // ivar: _preferredConfiguration
@property (readonly, nonatomic) CGFloat presentationYaw;
@property (nonatomic) ? region;
@property (readonly, nonatomic, getter=isRegionChanging) BOOL regionChanging;
@property (nonatomic) BOOL rendersInBackground;
@property (nonatomic, getter=isRotateEnabled) BOOL rotateEnabled;
@property (readonly, nonatomic, getter=_rotationGestureRecognizer) UIRotationGestureRecognizer *rotationGestureRecognizer;
@property (nonatomic, getter=isScaleEnabled) BOOL scaleEnabled;
@property (nonatomic, getter=_scaleVisibility, setter=_setScaleVisibility:) NSInteger scaleVisibility;
@property (nonatomic, getter=isScrollEnabled) BOOL scrollEnabled;
@property (nonatomic) NSInteger selectableMapFeatures; // ivar: _selectableMapFeatures
@property (copy, nonatomic) NSArray *selectedAnnotations;
@property (nonatomic, getter=_selectedFeatureID, setter=_setSelectedFeatureID:) NSUInteger selectedFeatureID;
@property (readonly, nonatomic, getter=_selectedLabelMarker) VKLabelMarker *selectedLabelMarker;
@property (readonly, nonatomic, getter=_selectingTapGestureRecognizer) UITapGestureRecognizer *selectingTapGestureRecognizer;
@property (nonatomic, getter=_shouldAnimatePositionWithRouteMatch, setter=_setShouldAnimatePositionWithRouteMatch:) BOOL shouldAnimatePositionWithRouteMatch;
@property (nonatomic, getter=_shouldLoadFallbackTiles, setter=_setShouldLoadFallbackTiles:) BOOL shouldLoadFallbackTiles;
@property (nonatomic, getter=_shouldSplitRouteLine, setter=_setShouldSplitRouteLine:) BOOL shouldSplitRouteLine;
@property (nonatomic, getter=_showHeadingIndicator, setter=_setShowHeadingIndicator:) BOOL showHeadingIndicator;
@property (nonatomic, getter=_showHeadingIndicatorForStepping, setter=_setShowHeadingIndicatorForStepping:) BOOL showHeadingIndicatorForStepping;
@property (readonly, nonatomic, getter=_isShowingAttributionBadge) BOOL showingAttributionBadge;
@property (readonly, nonatomic, getter=_isShowingCuratedElevatedGround) BOOL showingCuratedElevatedGround;
@property (readonly, nonatomic, getter=_isShowingFlyover) BOOL showingFlyover;
@property (nonatomic, getter=_showsAppleLogo, setter=_setShowsAppleLogo:) BOOL showsAppleLogo;
@property (nonatomic) BOOL showsAttribution;
@property (nonatomic) BOOL showsBuildings;
@property (nonatomic) BOOL showsCompass;
@property (nonatomic, getter=_showsCurrentEnvironmentName, setter=_setShowsCurrentEnvironmentName:) BOOL showsCurrentEnvironmentName;
@property (nonatomic, getter=_showsNightMode, setter=_setShowsNightMode:) BOOL showsNightMode;
@property (nonatomic) BOOL showsPitchControl; // ivar: _showsPitchControl
@property (nonatomic, getter=_showsPointLabels, setter=_setShowsPointLabels:) BOOL showsPointLabels;
@property (nonatomic) BOOL showsPointsOfInterest;
@property (nonatomic, getter=_showsPressedLabelMarkerEffect, setter=_setShowsPressedLabelMarkerEffect:) BOOL showsPressedLabelMarkerEffect;
@property (nonatomic, getter=_showsRoadLabels, setter=_setShowsRoadLabels:) BOOL showsRoadLabels;
@property (nonatomic, getter=_showsRoadShields, setter=_setShowsRoadShields:) BOOL showsRoadShields;
@property (nonatomic) BOOL showsScale;
@property (nonatomic, getter=_showsScaleDuringZoom, setter=_setShowsScaleDuringZoom:) BOOL showsScaleDuringZoom;
@property (nonatomic) BOOL showsTraffic;
@property (nonatomic, getter=_showsTrafficIncidents, setter=_setShowsTrafficIncidents:) BOOL showsTrafficIncidents;
@property (nonatomic) BOOL showsUserLocation;
@property (nonatomic, getter=_showsVenues, setter=_setShowsVenues:) BOOL showsVenues;
@property (nonatomic) BOOL showsZoomControls; // ivar: _showsZoomControls
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (nonatomic, getter=isSuspended) BOOL suspended;
@property (readonly, nonatomic, getter=_transitLineMarkersInCurrentViewport) NSArray *transitLineMarkersInCurrentViewport;
@property (readonly, nonatomic, getter=_twoFingerTapGestureRecognizer) UITapGestureRecognizer *twoFingerTapGestureRecognizer;
@property (nonatomic, getter=_useBalloonCalloutsForLabels, setter=_setUseBalloonCalloutsForLabels:) BOOL useBalloonCalloutsForLabels;
@property (nonatomic, getter=_userInteractionPausesLocationUpdates, setter=_setUserInteractionPausesLocationUpdates:) BOOL userInteractionPausesLocationUpdates;
@property (readonly, nonatomic) MKUserLocation *userLocation;
@property (readonly, retain, nonatomic) MKAnnotationView *userLocationView;
@property (readonly, nonatomic, getter=isUserLocationVisible) BOOL userLocationVisible;
@property (nonatomic, getter=_userTrackingBehavior, setter=_setUserTrackingBehavior:) ? userTrackingBehavior;
@property (nonatomic) NSInteger userTrackingMode;
@property (nonatomic, getter=_isVectorKitConsoleEnabled, setter=_setVectorKitConsoleEnabled:) BOOL vectorKitConsoleEnabled;
@property (readonly, nonatomic) VKVenueBuildingFeatureMarker *venueBuildingWithFocus;
@property (readonly, nonatomic) VKVenueFeatureMarker *venueWithFocus;
@property (nonatomic) ? visibleMapRect;
@property (readonly, nonatomic, getter=_visibleTileSets) NSArray *visibleTileSets;
@property (nonatomic, getter=isZoomEnabled) BOOL zoomEnabled;


+(NSUInteger)minZoomLevelForMapType:(NSUInteger)arg0 viewSize:(struct CGSize )arg1 ;
+(struct ? )_mapRectThatFitsViewBounds:(struct CGRect )arg0 mapRect:(struct ? )arg1 viewInsets:(struct UIEdgeInsets )arg2 edgePadding:(struct UIEdgeInsets )arg3 minZoomLevel:(CGFloat)arg4 maxZoomLevel:(CGFloat)arg5 snapToZoomLevel:(BOOL)arg6 ;
+(struct ? )_regionThatFitsMapType:(NSUInteger)arg0 viewSize:(struct CGSize )arg1 viewInsets:(struct UIEdgeInsets )arg2 edgePadding:(struct UIEdgeInsets )arg3 region:(struct ? )arg4 minZoomLevel:(CGFloat)arg5 maxZoomLevel:(CGFloat)arg6 snapToZoomLevel:(BOOL)arg7 ;
+(struct ? )regionThatFitsMapType:(NSUInteger)arg0 viewSize:(struct CGSize )arg1 edgeInsets:(struct UIEdgeInsets )arg2 region:(struct ? )arg3 ;
+(struct ? )regionThatFitsMapType:(NSUInteger)arg0 viewSize:(struct CGSize )arg1 region:(struct ? )arg2 ;
-(BOOL)_canShowAppleLogo;
-(BOOL)_canZoomIn;
-(BOOL)_canZoomOut;
-(BOOL)_clearUserLocationOnLocationReset;
-(BOOL)_hasSelectedTransitLines;
-(BOOL)_iconsShouldAlignToPixels;
-(BOOL)_isHandlingUserEvent;
-(BOOL)_isLocationPropagationEnabled;
-(BOOL)_isPoint:(struct CGPoint )arg0 nearUserLocationView:(CGFloat)arg1 ;
-(BOOL)_isUserLocationInView:(BOOL)arg0 ;
-(BOOL)_isUserLocationViewCentered:(CGFloat)arg0 ;
-(BOOL)_isUsingDevResourceStyleSheet;
-(BOOL)_isZooming;
-(BOOL)_mapViewHasUpdatedCamera;
-(BOOL)_mustWaitUntilSized;
-(BOOL)_pressEnded:(id)arg0 ;
-(BOOL)_roomForCompass;
-(BOOL)_rotationPossible;
-(BOOL)_shouldAnimatePropertyWithKey:(id)arg0 ;
-(BOOL)_shouldCallAnnotationViewCallback:(id)arg0 ;
-(BOOL)_shouldDisplayScaleForCurrentRegion;
-(BOOL)_shouldSelectMapFeature:(id)arg0 ;
-(BOOL)_shouldSupportAlwaysShowHeadingIndicator;
-(BOOL)_shouldUpdateSelectedRouteFromRoutes:(id)arg0 selectedRouteIndex:(NSUInteger)arg1 ;
-(BOOL)_supportsVKMapType:(int)arg0 ;
-(BOOL)_updateRotationSupported;
-(BOOL)_useVehicleHeading;
-(BOOL)annotationContainer:(id)arg0 isAnnotationView:(id)arg1 validForDisplayAtPoint:(struct CGPoint )arg2 ;
-(BOOL)annotationContainerIsRotated:(id)arg0 ;
-(BOOL)annotationContainerShouldAlignToPixels:(id)arg0 ;
-(BOOL)annotationManager:(id)arg0 canSelectAnnotationRepresentation:(id)arg1 ;
-(BOOL)annotationManager:(id)arg0 shouldAnimateDeselectionOfAnnotation:(id)arg1 forSelectionOfAnnotation:(id)arg2 ;
-(BOOL)calloutViewContainsPoint:(struct CGPoint )arg0 ;
-(BOOL)canBecomeFocused;
-(BOOL)canPossiblyShowCompass;
-(BOOL)compassVisible;
-(BOOL)displayedFloorIsDefaultForBuildingsInVenue:(id)arg0 ;
-(BOOL)gestureController:(id)arg0 shouldReceiveTouch:(id)arg1 ;
-(BOOL)gestureRecognizer:(id)arg0 shouldReceiveTouch:(id)arg1 ;
-(BOOL)gestureRecognizer:(id)arg0 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg1 ;
-(BOOL)gestureRecognizerShouldBegin:(id)arg0 ;
-(BOOL)isCurrentlyRotated;
-(BOOL)isLocationConsoleEnabled;
-(BOOL)isShowingNoDataPlaceholders;
-(BOOL)locationManagerShouldPauseLocationUpdates:(id)arg0 ;
-(BOOL)postsMapViewInitialRenderingNotification;
-(BOOL)shouldHideOffscreenSelectedAnnotation;
-(CGFloat)_animationDurationWhenSettingCameraBoundary:(id)arg0 ;
-(CGFloat)_boundedZoomLevel:(CGFloat)arg0 ;
-(CGFloat)_cameraAltitudeClampedToZoomRange:(id)arg0 ;
-(CGFloat)_defaultAnimationDurationForMapRect:(struct ? )arg0 edgePadding:(struct UIEdgeInsets )arg1 ;
-(CGFloat)_distanceFromPoint:(struct CGPoint )arg0 toPoint:(struct CGPoint )arg1 fromView:(id)arg2 withPrecision:(NSInteger)arg3 ;
-(CGFloat)_durationForCamera:(id)arg0 ;
-(CGFloat)_goToCenterCoordinate:(struct CLLocationCoordinate2D )arg0 zoomLevel:(CGFloat)arg1 animated:(BOOL)arg2 ;
-(CGFloat)_mapKitZoomLevelForVectorKitTileZoomLevel:(CGFloat)arg0 ;
-(CGFloat)_panDurationFromPoint:(struct CGPoint )arg0 toPoint:(struct CGPoint )arg1 ;
-(CGFloat)_vectorKitTileZoomLevelForMapKitZoomLevel:(CGFloat)arg0 ;
-(CGFloat)_zoomLevelForMapRect:(struct ? )arg0 includeAccessoryPadding:(BOOL)arg1 ;
-(CGFloat)_zoomLevelForRegion:(struct ? )arg0 includeAccessoryPadding:(BOOL)arg1 ;
-(CGFloat)_zoomScaleForMapRegion:(id)arg0 ;
-(CGFloat)annotationContainer:(id)arg0 pinDropDistanceForCoordinate:(struct CLLocationCoordinate2D )arg1 maxDistance:(*CGFloat)arg2 ;
-(CGFloat)gestureController:(id)arg0 shouldWaitForNextTapForDuration:(CGFloat)arg1 afterTouch:(id)arg2 ;
-(CGFloat)zoomToFocusVenue:(id)arg0 ;
-(CGFloat)zoomToFocusVenueBuilding:(id)arg0 ;
-(NSInteger)_controlsUserInterfaceStyleOverride;
-(NSInteger)_focusItemDeferralMode;
-(NSInteger)_roundedZoomLevel;
-(id)_annotationAtPoint:(struct CGPoint )arg0 avoidCurrent:(BOOL)arg1 ;
-(id)_commonInitFromIB:(BOOL)arg0 gestureRecognizerHostView:(id)arg1 locationManager:(id)arg2 showsAttribution:(BOOL)arg3 showsAppleLogo:(BOOL)arg4 allowsAntialiasing:(BOOL)arg5 ;
-(id)_commonVisibilityAnimation:(BOOL)arg0 ;
-(id)_flattenedAnnotationsForAnnotationViews:(id)arg0 maxDisplayPriority:(*float)arg1 ;
-(id)_initWithFrame:(struct CGRect )arg0 allowsAntialiasing:(BOOL)arg1 ;
-(id)_initWithFrame:(struct CGRect )arg0 gestureRecognizerHostView:(id)arg1 showsAttribution:(BOOL)arg2 showsAppleLogo:(BOOL)arg3 allowsAntialiasing:(BOOL)arg4 ;
-(id)_labelMarkerAtPoint:(struct CGPoint )arg0 ;
-(id)_labelMarkerForCustomFeatureAnnotation:(id)arg0 ;
-(id)_labelMarkersInCurrentViewport;
-(id)_labelMarkersInCurrentViewportForType:(int)arg0 ;
-(id)_mapConfigurationWithCartographicConfiguration:(struct ? )arg0 ;
-(id)_mapRegionWithCenterCoordinate:(struct CLLocationCoordinate2D )arg0 zoomScale:(CGFloat)arg1 ;
-(id)_routeInfoForRoute:(id)arg0 ;
-(id)_selectedTransitLineIDs;
-(id)_transitLineMarkerForIdentifier:(id)arg0 ;
-(id)_transitLineMarkersForSelectionAtPoint:(struct CGPoint )arg0 ;
-(id)_vkTimingFunctionForUIViewAnimationCurve:(SEL)arg0 ;
-(id)annotationContainer:(id)arg0 requestAddingClusterForAnnotationViews:(id)arg1 ;
-(id)annotationCoordinateTest:(SEL)arg0 ;
-(id)annotationManager:(id)arg0 representationForAnnotation:(id)arg1 ;
-(id)annotationRectTest:(SEL)arg0 ;
-(id)annotationsInMapRect:(struct ? )arg0 ;
-(id)beginStoppingEffects;
-(id)compassView;
-(id)createDrawableForOverlay:(id)arg0 ;
-(id)dequeueReusableAnnotationViewWithIdentifier:(id)arg0 ;
-(id)dequeueReusableAnnotationViewWithIdentifier:(id)arg0 forAnnotation:(id)arg1 ;
-(id)focusEffect;
-(id)initFromIBWithFrame:(struct CGRect )arg0 ;
-(id)initWithCoder:(id)arg0 ;
-(id)initWithFrame:(struct CGRect )arg0 ;
-(id)initWithFrame:(struct CGRect )arg0 locationManager:(id)arg1 ;
-(id)mapAttributionWithStringAttributes:(id)arg0 ;
-(id)mapAttributionWithStringAttributes:(id)arg0 allowMultiLine:(BOOL)arg1 ;
-(id)mapAttributionWithStringAttributes:(id)arg0 underlineText:(BOOL)arg1 ;
-(id)mapAttributionWithStringAttributes:(id)arg0 underlineText:(BOOL)arg1 linkAttribution:(BOOL)arg2 ;
-(id)mapLayerPresentationForAnnotation:(id)arg0 ;
-(id)overlayContainer;
-(id)overlaysInLevel:(NSInteger)arg0 ;
-(id)rendererForOverlay:(id)arg0 ;
-(id)scaleView;
-(id)urlForMapAttribution;
-(id)venueWithID:(NSUInteger)arg0 ;
-(id)viewForAnnotation:(id)arg0 ;
-(id)viewForOverlay:(id)arg0 ;
-(int)_viewIndexForSubview:(id)arg0 ;
-(int)currentMapViewTargetForAnalytics;
-(int)currentUITargetForAnalytics;
-(short)defaultFloorForBuildingsInVenue:(id)arg0 ;
-(short)displayedFloorOrdinalForBuildingsInVenue:(id)arg0 ;
-(struct ? )_convertPoint:(struct CGPoint )arg0 toMapPointFromView:(id)arg1 ;
-(struct ? )_convertRect:(struct CGRect )arg0 toMapRectFromView:(id)arg1 ;
-(struct ? )_convertRect:(struct CGRect )arg0 toRegionFromView:(id)arg1 ;
-(struct ? )_mapDisplayStyle;
-(struct ? )_mapRectWithFraction:(CGFloat)arg0 ofVisible:(struct ? )arg1 ;
-(struct ? )_zoomRegionForMapRect:(struct ? )arg0 edgePadding:(struct UIEdgeInsets )arg1 maxZoomLevel:(NSInteger)arg2 minZoomLevel:(NSInteger)arg3 ;
-(struct ? )convertRect:(struct CGRect )arg0 toMapRectFromView:(id)arg1 ;
-(struct ? )convertRect:(struct CGRect )arg0 toRegionFromView:(id)arg1 ;
-(struct ? )mapRectThatFits:(struct ? )arg0 ;
-(struct ? )mapRectThatFits:(struct ? )arg0 edgePadding:(struct UIEdgeInsets )arg1 ;
-(struct ? )overlayContainerVisibleMapRect:(id)arg0 ;
-(struct ? )regionThatFits:(struct ? )arg0 ;
-(struct CGPoint )_centerPoint;
-(struct CGPoint )_convertCoordinate:(struct CLLocationCoordinate2D )arg0 toPointToView:(id)arg1 ;
-(struct CGPoint )_convertMapPoint:(struct ? )arg0 toPointToView:(id)arg1 ;
-(struct CGPoint )convertCoordinate:(struct CLLocationCoordinate2D )arg0 toPointToView:(id)arg1 ;
-(struct CGPoint )gestureController:(id)arg0 focusPointForPoint:(struct CGPoint )arg1 gestureKind:(NSInteger)arg2 ;
-(struct CGRect )_convertMapRect:(struct ? )arg0 toRectToView:(id)arg1 ;
-(struct CGRect )_convertRegion:(struct ? )arg0 toRectToView:(id)arg1 ;
-(struct CGRect )_currentEnvironmentNameFrame;
-(struct CGRect )annotationContainerVisibleRect:(id)arg0 ;
-(struct CGRect )attributionFrame;
-(struct CGRect )convertMapRect:(struct ? )arg0 toRectToView:(id)arg1 ;
-(struct CGRect )convertRegion:(struct ? )arg0 toRectToView:(id)arg1 ;
-(struct CGRect )gestureControllerSignificantViewFrame:(id)arg0 ;
-(struct CGRect )visibleCenteringRectInView:(id)arg0 ;
-(struct CGRect )visibleRectInView:(id)arg0 ;
-(struct CLLocationCoordinate2D )_convertPoint:(struct CGPoint )arg0 toCoordinateFromView:(id)arg1 ;
-(struct CLLocationCoordinate2D )convertPoint:(struct CGPoint )arg0 toCoordinateFromView:(id)arg1 ;
-(void)_addAnnotation:(id)arg0 allowAnimation:(BOOL)arg1 ;
-(void)_addAnnotations:(id)arg0 allowAnimation:(BOOL)arg1 ;
-(void)_addAnnotationsCustomFeatureStoreIfNeeded;
-(void)_addCustomFeatureDataSource:(id)arg0 ;
-(void)_addDebugGesture;
-(void)_addDependentAuxiliaryBlock:(id)arg0 ;
-(void)_addDependentSetRegionBlock:(id)arg0 ;
// -(void)_addDependentSetRegionBlock:(id)arg0 completion:(unk)arg1  ;
-(void)_addPersistentVectorOverlay:(id)arg0 ;
-(void)_addSetRegionBlock:(id)arg0 ;
// -(void)_addSetRegionBlock:(id)arg0 completion:(unk)arg1  ;
-(void)_addVectorOverlay:(id)arg0 ;
-(void)_addViewsForAnnotations:(id)arg0 ;
-(void)_annotationViewDragStateChanged:(id)arg0 ;
-(void)_clearFixedUserLocation;
-(void)_clearGestureRecognizers;
-(void)_clearGesturesAndAnimations;
-(void)_clearLayoutGuides;
-(void)_clearRouteContext;
-(void)_configureGestureRecognizers:(id)arg0 ;
-(void)_countUsageForAnnotationViewsIfNeeded:(id)arg0 ;
-(void)_countUsageForRendererIfNeeded:(id)arg0 ;
-(void)_countUsageOfTypeIfNeeded:(NSUInteger)arg0 forAnnotationView:(id)arg1 countedEventTypes:(id)arg2 ;
-(void)_createAnnotationViewSetIfNeeded;
-(void)_createOverlayRendererDictionaryIfNeeded;
-(void)_deselectLabelMarkerAnimated:(BOOL)arg0 ;
-(void)_deselectTransitLineMarker;
-(void)_didChangeRegionMidstream:(BOOL)arg0 ;
-(void)_didEndZoom;
-(void)_displayWorld;
-(void)_dropDraggingAnnotationView:(BOOL)arg0 ;
-(void)_endZoomForExternalGesture;
-(void)_enter3DMode;
-(void)_enterARMode;
-(void)_enterARModeWithLocation:(id)arg0 ;
-(void)_exit3DMode;
-(void)_exitARMode;
-(void)_fixUserLocationFromPresentationValue;
-(void)_forceFrame;
-(void)_forceManifestUpdateIfNecessary;
-(void)_goToMapRegion:(id)arg0 duration:(CGFloat)arg1 animated:(BOOL)arg2 ;
-(void)_goToMapRegion:(id)arg0 duration:(CGFloat)arg1 animated:(BOOL)arg2 completionHandler:(id)arg3 ;
-(void)_goToMapRegion:(id)arg0 duration:(CGFloat)arg1 timingFunction:(id)arg2 animated:(BOOL)arg3 completionHandler:(id)arg4 ;
-(void)_handleCompassTap:(id)arg0 ;
-(void)_handleLongPressGesture:(id)arg0 ;
-(void)_handleSelectGestureToDeselect:(id)arg0 ;
-(void)_handleSelectGestureToSelect:(id)arg0 ;
-(void)_handleSelectionAtPoint:(struct CGPoint )arg0 ;
-(void)_insertSubview:(id)arg0 ;
-(void)_insertSubviewBelowAnnotationContainerView:(id)arg0 ;
-(void)_invalidateAllOverlayRendererColors;
-(void)_issueDatasetCheckinCall;
-(void)_layoutAttribution;
-(void)_locationManager:(id)arg0 didUpdateVehicleHeading:(CGFloat)arg1 timestamp:(id)arg2 ;
-(void)_pauseFlyoverAnimation;
-(void)_pauseUserLocationUpdates;
-(void)_performFlyoverAnimation:(id)arg0 ;
-(void)_performFlyoverAnimation:(id)arg0 animateToStart:(BOOL)arg1 ;
-(void)_performWhenSizedBlocks;
-(void)_populateArchivedSubviews:(id)arg0 ;
-(void)_postDidUpdateYawNotification;
-(void)_prepareFlyoverAnimation:(id)arg0 completion:(id)arg1 ;
-(void)_registerConfigurationObservers;
-(void)_registerSceneLifecycleNotifications;
-(void)_removeCustomFeatureDataSource:(id)arg0 ;
-(void)_removePersistentVectorOverlay:(id)arg0 ;
-(void)_removeVectorOverlay:(id)arg0 ;
-(void)_replaceAnnotation:(id)arg0 withAnnotation:(id)arg1 ;
-(void)_resumeFlyoverAnimation;
-(void)_resumePropagatingEdgeInsets;
-(void)_resumeUserInteraction;
-(void)_resumeUserLocationUpdates:(BOOL)arg0 ;
-(void)_sceneDidActivate:(id)arg0 ;
-(void)_sceneDidEnterBackground:(id)arg0 ;
-(void)_sceneDidFinishSuspensionSnapshot:(id)arg0 ;
-(void)_sceneWillEnterForeground:(id)arg0 ;
-(void)_selectAnnotation:(id)arg0 animated:(BOOL)arg1 ;
-(void)_selectLabelMarker:(id)arg0 animated:(BOOL)arg1 ;
-(void)_selectTransitLineMarker:(id)arg0 ;
-(void)_selectTransitLineMarkerWithIdentifier:(id)arg0 ;
-(void)_selectUserLocationTypeWithDeltaZoomLevel:(CGFloat)arg0 ;
-(void)_setAlternateRouteContextAnnotationETAComparison:(unsigned char)arg0 forRoute:(id)arg1 ;
-(void)_setClearUserLocationOnLocationReset:(BOOL)arg0 ;
-(void)_setCompassVisible:(BOOL)arg0 animationAllowed:(BOOL)arg1 force:(BOOL)arg2 ;
-(void)_setLocationPropagationEnabled:(BOOL)arg0 ;
-(void)_setMapDisplayStyle:(struct ? )arg0 ;
-(void)_setRouteContext:(id)arg0 ;
-(void)_setRouteContextAnnotationFocus:(BOOL)arg0 forRoute:(id)arg1 ;
-(void)_setRouteContextAnnotationText:(id)arg0 advisoryStyleAttributes:(id)arg1 forRoute:(id)arg2 ;
-(void)_setRouteContextAnnotationText:(id)arg0 tollCurrency:(unsigned char)arg1 forRoute:(id)arg2 ;
-(void)_setRouteContextAnnotationTexts:(id)arg0 forLegsInRoute:(id)arg1 ;
-(void)_setRouteContextForRoute:(id)arg0 ;
-(void)_setRouteContextForRoutes:(id)arg0 selectedRouteIndex:(NSUInteger)arg1 ;
-(void)_setRouteContextInspectedSegmentIndex:(NSUInteger)arg0 inspectedStepIndex:(NSUInteger)arg1 ;
-(void)_setTracePlaybackSpeedMultiplier:(CGFloat)arg0 ;
-(void)_setUseVehicleHeading:(BOOL)arg0 ;
-(void)_setZoomScale:(CGFloat)arg0 centerCoordinate:(struct CLLocationCoordinate2D )arg1 duration:(CGFloat)arg2 animated:(BOOL)arg3 ;
-(void)_setZoomScale:(CGFloat)arg0 centerCoordinate:(struct CLLocationCoordinate2D )arg1 duration:(CGFloat)arg2 timingFunction:(id)arg3 animated:(BOOL)arg4 ;
-(void)_setZoomScale:(CGFloat)arg0 centerMapPoint:(struct ? )arg1 duration:(CGFloat)arg2 animated:(BOOL)arg3 ;
-(void)_setZoomScale:(CGFloat)arg0 centerMapPoint:(struct ? )arg1 duration:(CGFloat)arg2 timingFunction:(id)arg3 animated:(BOOL)arg4 ;
-(void)_showOrHideScaleIfNecessary:(BOOL)arg0 ;
-(void)_sizeDidChangeWithCenterCoordinate:(struct CLLocationCoordinate2D )arg0 ;
-(void)_sizeWillChange;
-(void)_snapToNorthIfNecessary;
-(void)_snapToTrueNorthAndCallBack:(BOOL)arg0 ;
-(void)_startEffects;
-(void)_startFlyoverTourAnimation:(NSUInteger)arg0 duration:(CGFloat)arg1 completion:(id)arg2 ;
-(void)_startPanningAtPoint:(struct CGPoint )arg0 ;
-(void)_startTrackingHeading;
-(void)_startZoomForExternalGesture;
-(void)_stopEffects;
-(void)_stopFlyoverAnimation;
-(void)_stopPanningAtPoint:(struct CGPoint )arg0 ;
-(void)_stopTrackingHeading;
-(void)_suspendPropagatingEdgeInsets;
-(void)_suspendUserInteraction;
-(void)_unregisterConfigurationObservers;
-(void)_unregisterSceneLifecycleNotifications;
-(void)_updateAppearanceIfNeeded;
-(void)_updateAppleLogoVisibility;
-(void)_updateAttribution;
-(void)_updateCameraState;
-(void)_updateCartographicConfiguration;
-(void)_updateCartographicConfigurationOnInit:(BOOL)arg0 ;
-(void)_updateChargingStationTexts;
-(void)_updateCompassPositionClassic;
-(void)_updateCompassVisibility;
-(void)_updateContentBounds;
-(void)_updateControlsPosition:(BOOL)arg0 ;
-(void)_updateCourseForMapViewHeading:(id)arg0 ;
-(void)_updateEffects;
-(void)_updateEnvironmentLabelText;
-(void)_updateFallbackTileLoading;
-(void)_updateFromCamera:(id)arg0 ;
// -(void)_updateFromCamera:(id)arg0 duration:(CGFloat)arg1 timing:(id)arg2 completionHandler:(unk)arg3  ;
-(void)_updateHeading:(id)arg0 animated:(BOOL)arg1 ;
-(void)_updateHeadingIndicatorAnimated:(BOOL)arg0 ;
-(void)_updateHeadingOrientation;
-(void)_updateIconsShouldAlignToPixels;
-(void)_updateInsets;
-(void)_updateInsetsWithForce:(BOOL)arg0 ;
-(void)_updateLocationConsole;
-(void)_updatePanWithTranslation:(struct CGPoint )arg0 ;
-(void)_updateRotationAttributes;
-(void)_updateScale;
-(void)_updateScalePosition;
-(void)_updateScrollContainerView:(BOOL)arg0 forReason:(NSInteger)arg1 ;
-(void)_updateScrollingAndGestures;
-(void)_updateShouldDisplayEffects;
-(void)_updateShowHeadingIndicator;
-(void)_updateUserLocation:(id)arg0 routeMatch:(id)arg1 ;
-(void)_updateUserLocationViewWithLocation:(id)arg0 hadUserLocation:(BOOL)arg1 ;
-(void)_updateVectorKitConsoleFrameWithEdgeInsets;
-(void)_willChangeRegionAnimated:(BOOL)arg0 ;
-(void)_willChangeStatusBarFrame:(id)arg0 ;
-(void)_willStartZoom:(BOOL)arg0 ;
-(void)_withEffectiveTraitCollection:(id)arg0 ;
-(void)_zoomIn;
-(void)_zoomInWithCompletionHandler:(id)arg0 ;
-(void)_zoomOut;
-(void)_zoomOutWithCompletionHandler:(id)arg0 ;
-(void)_zoomWithAmount:(CGFloat)arg0 ;
-(void)_zoomWithAmount:(CGFloat)arg0 completionHandler:(id)arg1 ;
-(void)addAnnotation:(id)arg0 ;
-(void)addAnnotationRepresentation:(id)arg0 allowAnimation:(BOOL)arg1 ;
-(void)addAnnotations:(id)arg0 ;
-(void)addOverlay:(id)arg0 ;
-(void)addOverlay:(id)arg0 level:(NSInteger)arg1 ;
-(void)addOverlays:(id)arg0 ;
-(void)addOverlays:(id)arg0 level:(NSInteger)arg1 ;
-(void)annotationContainer:(id)arg0 annotationView:(id)arg1 calloutAccessoryControlTapped:(id)arg2 ;
-(void)annotationContainer:(id)arg0 calloutPrimaryActionTriggeredForAnnotationView:(id)arg1 ;
-(void)annotationContainer:(id)arg0 requestRemovingClusterAnnotationView:(id)arg1 updateVisible:(BOOL)arg2 ;
-(void)annotationContainer:(id)arg0 scrollToRevealCalloutWithOffset:(struct CGPoint )arg1 annotationCoordinate:(struct CLLocationCoordinate2D )arg2 completionHandler:(id)arg3 ;
-(void)annotationContainerDidAnimateBubble:(id)arg0 ;
-(void)annotationContainerDidDropPins:(id)arg0 ;
-(void)annotationContainerDidFinishMapsTransitionExpanding:(id)arg0 ;
-(void)annotationContainerWillAnimateBubble:(id)arg0 ;
-(void)annotationContainerWillDropPins:(id)arg0 ;
-(void)annotationManager:(id)arg0 didAddAnnotationRepresentations:(id)arg1 ;
-(void)annotationManager:(id)arg0 didDeselectAnnotationRepresentation:(id)arg1 ;
-(void)annotationManager:(id)arg0 didRemoveAnnotationRepresentations:(id)arg1 ;
-(void)annotationManager:(id)arg0 didSelectAnnotationRepresentation:(id)arg1 ;
-(void)annotationManager:(id)arg0 willDeselectAnnotationRepresentation:(id)arg1 ;
-(void)annotationManagerDidChangeVisibleAnnotationRepresentations:(id)arg0 ;
-(void)applicationDidBecomeActive:(id)arg0 ;
-(void)applicationDidEnterBackground:(id)arg0 ;
-(void)applicationWillEnterForeground:(id)arg0 ;
-(void)applicationWillResignActive:(id)arg0 ;
-(void)applicationWillTerminate:(id)arg0 ;
-(void)calloutDidAppearForAnnotationView:(id)arg0 inContainer:(id)arg1 ;
-(void)dealloc;
-(void)deselectAnnotation:(id)arg0 animated:(BOOL)arg1 ;
-(void)deselectAnnotationRepresentation:(id)arg0 animated:(BOOL)arg1 ;
-(void)deselectVenuePoiFeatureId;
-(void)deviceOrientationDidChange:(id)arg0 ;
-(void)didMoveToSuperview;
-(void)didMoveToWindow;
-(void)drawRect:(struct CGRect )arg0 forViewPrintFormatter:(id)arg1 ;
-(void)encodeWithCoder:(id)arg0 ;
-(void)exchangeOverlay:(id)arg0 withOverlay:(id)arg1 ;
-(void)exchangeOverlayAtIndex:(NSUInteger)arg0 withOverlayAtIndex:(NSUInteger)arg1 ;
-(void)gestureControllerDidStopPanning:(id)arg0 willDecelerate:(BOOL)arg1 ;
-(void)gestureControllerDidStopPanningDecelerating:(id)arg0 ;
-(void)gestureControllerDidStopRotating:(id)arg0 willDecelerate:(BOOL)arg1 ;
-(void)gestureControllerDidStopRotatingDecelerating:(id)arg0 ;
-(void)gestureControllerDidStopTilting:(id)arg0 willDecelerate:(BOOL)arg1 tiltDirection:(NSInteger)arg2 ;
-(void)gestureControllerDidStopTiltingDecelerating:(id)arg0 ;
-(void)gestureControllerDidStopTwoFingerLongPress:(id)arg0 ;
-(void)gestureControllerDidStopUserInteraction:(id)arg0 ;
-(void)gestureControllerDidStopZooming:(id)arg0 direction:(NSInteger)arg1 type:(NSInteger)arg2 willDecelerate:(BOOL)arg3 ;
-(void)gestureControllerDidStopZooming:(id)arg0 direction:(NSInteger)arg1 willDecelerate:(BOOL)arg2 ;
-(void)gestureControllerDidStopZoomingDecelerating:(id)arg0 direction:(NSInteger)arg1 ;
-(void)gestureControllerDidStopZoomingDecelerating:(id)arg0 direction:(NSInteger)arg1 type:(NSInteger)arg2 ;
-(void)gestureControllerWillStartPanning:(id)arg0 ;
-(void)gestureControllerWillStartRotating:(id)arg0 ;
-(void)gestureControllerWillStartTilting:(id)arg0 ;
-(void)gestureControllerWillStartTwoFingerLongPress:(id)arg0 ;
-(void)gestureControllerWillStartUserInteraction:(id)arg0 ;
-(void)gestureControllerWillStartZooming:(id)arg0 animated:(BOOL)arg1 ;
-(void)goToDefaultLocation;
-(void)insertOverlay:(id)arg0 aboveOverlay:(id)arg1 ;
-(void)insertOverlay:(id)arg0 atIndex:(NSUInteger)arg1 ;
-(void)insertOverlay:(id)arg0 atIndex:(NSUInteger)arg1 level:(NSInteger)arg2 ;
-(void)insertOverlay:(id)arg0 belowOverlay:(id)arg1 ;
-(void)layoutMarginsDidChange;
-(void)layoutSubviews;
-(void)locationManager:(id)arg0 didUpdateVehicleHeading:(CGFloat)arg1 timestamp:(id)arg2 ;
-(void)locationManager:(id)arg0 didUpdateVehicleSpeed:(CGFloat)arg1 timestamp:(id)arg2 ;
-(void)locationManagerApprovalDidChange:(id)arg0 ;
-(void)locationManagerDidPauseLocationUpdates:(id)arg0 ;
-(void)locationManagerDidReset:(id)arg0 ;
-(void)locationManagerDidResumeLocationUpdates:(id)arg0 ;
-(void)locationManagerFailedToUpdateHeading:(id)arg0 withError:(id)arg1 ;
-(void)locationManagerFailedToUpdateLocation:(id)arg0 withError:(id)arg1 ;
-(void)locationManagerUpdatedHeading:(id)arg0 ;
-(void)locationManagerUpdatedLocation:(id)arg0 ;
-(void)makeZoomButtonsIfNeeded;
-(void)mapLayer:(id)arg0 arSessionWasInterrupted:(NSUInteger)arg1 ;
-(void)mapLayer:(id)arg0 arTrackingStateDidChange:(NSUInteger)arg1 reason:(NSUInteger)arg2 ;
-(void)mapLayer:(id)arg0 canShowFlyoverDidChange:(BOOL)arg1 ;
-(void)mapLayer:(id)arg0 didEncounterARError:(id)arg1 ;
-(void)mapLayer:(id)arg0 didStopFlyoverTourCompleted:(BOOL)arg1 ;
-(void)mapLayer:(id)arg0 didUpdateVerticalYawTo:(CGFloat)arg1 ;
-(void)mapLayer:(id)arg0 flyoverModeDidChange:(int)arg1 ;
-(void)mapLayer:(id)arg0 flyoverModeWillChange:(int)arg1 ;
-(void)mapLayer:(id)arg0 flyoverTourLabelDidChange:(id)arg1 ;
-(void)mapLayer:(id)arg0 puckLocationTracingEvent:(id)arg1 ;
-(void)mapLayer:(id)arg0 selectedLabelMarkerDidChangeState:(id)arg1 ;
-(void)mapLayer:(id)arg0 selectedLabelMarkerWillDisappear:(id)arg1 ;
-(void)mapLayer:(id)arg0 showingFlyoverDidChange:(BOOL)arg1 ;
-(void)mapLayer:(id)arg0 venueWithFocusDidChange:(id)arg1 building:(id)arg2 ;
-(void)mapLayer:(id)arg0 willTransitionTo:(NSInteger)arg1 ;
-(void)mapLayerARSessionInterruptionEnded:(id)arg0 ;
-(void)mapLayerCanEnter3DModeDidChange:(BOOL)arg0 ;
-(void)mapLayerCanZoomInDidChange:(BOOL)arg0 ;
-(void)mapLayerCanZoomOutDidChange:(BOOL)arg0 ;
-(void)mapLayerDidBecomePitched:(BOOL)arg0 ;
-(void)mapLayerDidChangeRegionAnimated:(BOOL)arg0 ;
-(void)mapLayerDidChangeSceneState:(id)arg0 withState:(NSUInteger)arg1 ;
-(void)mapLayerDidChangeVisibleRegion;
-(void)mapLayerDidDraw:(id)arg0 ;
-(void)mapLayerDidEnterAR:(id)arg0 ;
-(void)mapLayerDidExitAR:(id)arg0 ;
-(void)mapLayerDidFailLoadingTiles:(id)arg0 withError:(id)arg1 ;
-(void)mapLayerDidFinishInitialTrackingAnimation;
-(void)mapLayerDidFinishLoadingTiles:(id)arg0 ;
-(void)mapLayerDidStartLoadingTiles:(id)arg0 ;
-(void)mapLayerLabelsDidLayout:(id)arg0 ;
-(void)mapLayerMuninAvailabilityDidChange:(NSInteger)arg0 ;
-(void)mapLayerNavigationCameraDidLeaveDefaultZoom;
-(void)mapLayerNavigationCameraDidReturnToDefaultZoom;
-(void)mapLayerNavigationCameraHasStartedPanning;
-(void)mapLayerNavigationCameraHasStoppedPanning;
-(void)mapLayerWillChangeRegionAnimated:(BOOL)arg0 ;
-(void)mapLayerWillEnterAR:(id)arg0 ;
-(void)mapLayerWillStartFlyoverTour:(id)arg0 ;
-(void)moveAnnotationRepresentation:(id)arg0 fromCoordinate:(struct CLLocationCoordinate2D )arg1 animated:(BOOL)arg2 duration:(CGFloat)arg3 ;
-(void)navigationCameraReturnToPuck;
-(void)observeValueForKeyPath:(id)arg0 ofObject:(id)arg1 change:(id)arg2 context:(*void)arg3 ;
-(void)overlayContainerAddedDrawables:(id)arg0 ;
-(void)pauseUserHeadingUpdates;
-(void)pauseUserLocationUpdates;
-(void)pressesBegan:(id)arg0 withEvent:(id)arg1 ;
-(void)pressesCancelled:(id)arg0 withEvent:(id)arg1 ;
-(void)pressesEnded:(id)arg0 withEvent:(id)arg1 ;
-(void)registerClass:(Class)arg0 forAnnotationViewWithReuseIdentifier:(id)arg1 ;
-(void)removeAnnotation:(id)arg0 ;
-(void)removeAnnotationRepresentation:(id)arg0 ;
-(void)removeAnnotations:(id)arg0 ;
-(void)removeOverlay:(id)arg0 ;
-(void)removeOverlays:(id)arg0 ;
-(void)removeUserLocation;
-(void)resetDisplayedFloorOrdinalForAllVenues;
-(void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg0 ;
-(void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg0 ;
-(void)resumeUserHeadingUpdates;
-(void)resumeUserLocationUpdates;
-(void)rotationFilter:(id)arg0 didChangeSnapping:(BOOL)arg1 ;
-(void)safeAreaInsetsDidChange;
-(void)selectAnnotation:(id)arg0 animated:(BOOL)arg1 ;
-(void)selectAnnotationRepresentation:(id)arg0 animated:(BOOL)arg1 ;
-(void)setBackdropViewQualityChangingDisabled:(BOOL)arg0 ;
-(void)setBounds:(struct CGRect )arg0 ;
-(void)setCenter:(struct CGPoint )arg0 ;
-(void)setCustomOverrideInterfaceStyle:(NSInteger)arg0 ;
-(void)setDisplayedFloorOrdinal:(short)arg0 forBuildingsInVenue:(id)arg1 ;
-(void)setFlyoverMode:(int)arg0 ;
-(void)setFrame:(struct CGRect )arg0 ;
-(void)setHidden:(BOOL)arg0 ;
-(void)setLayoutMargins:(struct UIEdgeInsets )arg0 ;
-(void)setLocationConsoleEnabled:(BOOL)arg0 ;
-(void)setSelectedVenuePoiFeatureId:(NSUInteger)arg0 ;
-(void)setVehicleState:(struct ? )arg0 ;
-(void)showAnnotations:(id)arg0 animated:(BOOL)arg1 ;
-(void)snapToNorth:(id)arg0 ;
-(void)startLinearZoomIn:(BOOL)arg0 ;
-(void)startUpdatingUserLocation;
-(void)stopUpdatingUserLocation;
-(void)stopZoomingWithInertia;
-(void)toggleLocationConsole:(id)arg0 ;
-(void)traitCollectionDidChange:(id)arg0 ;
-(void)updateLayoutGuides;
-(void)valueChangedForGEOConfigKey:(struct ? )arg0 ;
-(void)willMoveToWindow:(id)arg0 ;
-(void)zoomControlMinusPressed:(id)arg0 ;
-(void)zoomControlMinusReleased:(id)arg0 ;
-(void)zoomControlPlusPressed:(id)arg0 ;
-(void)zoomControlPlusReleased:(id)arg0 ;
-(void)zoomIn:(id)arg0 ;
-(void)zoomOut:(id)arg0 ;


@end


#endif