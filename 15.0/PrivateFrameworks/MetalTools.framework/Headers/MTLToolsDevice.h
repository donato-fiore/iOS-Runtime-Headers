// Headers generated with ktool v2.0.0
// https://github.com/cxnder/ktool | pip3 install k2l
// Platform: IOS | Minimum OS: 15.0.0 | SDK: 15.0.0


#ifndef MTLTOOLSDEVICE_H
#define MTLTOOLSDEVICE_H

@class MTLGPUBVHBuilder, NSArray, NSString, NSDictionary, MTLTargetDeviceArchitecture;
@protocol MTLDeviceSPI;


#import "MTLToolsObject.h"
#import "MTLToolsObjectCache.h"

@interface MTLToolsDevice : MTLToolsObject <MTLDeviceSPI>

 {
    id<MTLDeviceSPI> *_deviceWrapper;
    MTLToolsObjectCache *functionHandleObjectCache;
    MTLToolsObjectCache *dynamicLibraryObjectCache;
    MTLToolsObjectCache *sourceLibraryObjectCache;
    MTLToolsObjectCache *functionObjectCache;
    MTLToolsObjectCache *depthStencilObjectCache;
    MTLToolsObjectCache *samplerObjectCache;
}


@property (readonly, getter=isAnisoSampleFixSupported) BOOL AnisoSampleFixSupported;
@property (readonly, getter=isBCTextureCompressionSupported) BOOL BCTextureCompressionSupported;
@property (readonly, getter=isClampToHalfBorderSupported) BOOL ClampToHalfBorderSupported;
@property (readonly, getter=isCustomBorderColorSupported) BOOL CustomBorderColorSupported;
@property (readonly, getter=isFixedLinePointFillDepthGradientSupported) BOOL FixedLinePointFillDepthGradientSupported;
@property (readonly) MTLGPUBVHBuilder *GPUBVHBuilder;
@property (readonly, getter=isRGB10A2GammaSupported) BOOL RGB10A2GammaSupported;
@property (readonly, getter=isRTZRoundingSupported) BOOL RTZRoundingSupported;
@property (readonly) unsigned int acceleratorPort;
@property (readonly) NSUInteger argumentBuffersSupport;
@property (readonly, getter=areBarycentricCoordsSupported) BOOL barycentricCoordsSupported;
@property (nonatomic) NSUInteger commandBufferErrorOptions;
@property (readonly) NSArray *counterSets;
@property (readonly) NSUInteger currentAllocatedSize;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) NSUInteger dedicatedMemorySize;
@property (readonly) NSInteger defaultTextureWriteRoundingMode;
@property (readonly, getter=isDepth24Stencil8PixelFormatSupported) BOOL depth24Stencil8PixelFormatSupported;
@property (readonly, copy) NSString *description;
@property (readonly) NSUInteger deviceCreationFlags;
@property (readonly) NSUInteger deviceLinearReadOnlyTextureAlignmentBytes;
@property (readonly) NSUInteger deviceLinearTextureAlignmentBytes;
@property (readonly) NSUInteger doubleFPConfig;
@property (readonly) NSUInteger featureProfile;
@property (readonly, getter=isFloat32FilteringSupported) BOOL float32FilteringSupported;
@property (getter=areGPUAssertionsEnabled, setter=setGPUAssertionsEnabled:) BOOL gpuAssertionsEnabled;
@property (readonly) NSUInteger halfFPConfig;
@property (readonly) BOOL hasUnifiedMemory;
@property (readonly) NSUInteger hash;
@property (readonly, getter=isHeadless) BOOL headless;
@property (readonly) IndirectArgumentBufferCapabilities indirectArgumentBufferCapabilities;
@property (readonly, getter=isIntegrated) BOOL integrated; // ivar: _integrated
@property (readonly) NSUInteger iosurfaceReadOnlyTextureAlignmentBytes;
@property (readonly) NSUInteger iosurfaceTextureAlignmentBytes;
@property (readonly, getter=isLargeMRTSupported) BOOL largeMRTSupported;
@property (readonly) *? limits;
@property (readonly) NSUInteger linearTextureAlignmentBytes;
@property (readonly) NSUInteger linearTextureArrayAlignmentBytes;
@property (readonly) NSUInteger linearTextureArrayAlignmentSlice;
@property (readonly, getter=isLowPower) BOOL lowPower;
@property (readonly) NSUInteger maxArgumentBufferSamplerCount;
@property (readonly) NSUInteger maxBufferLength;
@property (readonly) NSUInteger maxColorAttachments;
@property (readonly) NSUInteger maxComputeAttributes;
@property (readonly) NSUInteger maxComputeBuffers;
@property (readonly) NSUInteger maxComputeInlineDataSize;
@property (readonly) NSUInteger maxComputeLocalMemorySizes;
@property (readonly) NSUInteger maxComputeSamplers;
@property (readonly) NSUInteger maxComputeTextures;
@property (readonly) NSUInteger maxComputeThreadgroupMemory;
@property (readonly) NSUInteger maxComputeThreadgroupMemoryAlignmentBytes;
@property (readonly) NSUInteger maxConstantBufferArguments;
@property (readonly) NSUInteger maxCustomSamplePositions;
@property (readonly) NSUInteger maxFenceInstances;
@property (readonly) NSUInteger maxFragmentBuffers;
@property (readonly) NSUInteger maxFragmentInlineDataSize;
@property (readonly) NSUInteger maxFragmentSamplers;
@property (readonly) NSUInteger maxFragmentTextures;
@property (readonly) NSUInteger maxFramebufferStorageBits;
@property (readonly) NSUInteger maxFunctionConstantIndices;
@property (readonly) NSUInteger maxIndirectBuffers;
@property (readonly) NSUInteger maxIndirectSamplers;
@property (readonly) NSUInteger maxIndirectSamplersPerDevice;
@property (readonly) NSUInteger maxIndirectTextures;
@property (readonly) NSUInteger maxInterpolants;
@property (readonly) NSUInteger maxInterpolatedComponents;
@property (readonly) float maxLineWidth;
@property (readonly) float maxPointSize;
@property (readonly) NSUInteger maxPredicatedNestingDepth;
@property (readonly) NSUInteger maxRasterizationRateLayerCount;
@property (readonly) NSUInteger maxTessellationFactor;
@property (readonly) NSUInteger maxTextureBufferWidth;
@property (readonly) NSUInteger maxTextureDepth3D;
@property (readonly) NSUInteger maxTextureDimensionCube;
@property (readonly) NSUInteger maxTextureHeight2D;
@property (readonly) NSUInteger maxTextureHeight3D;
@property (readonly) NSUInteger maxTextureLayers;
@property (readonly) NSUInteger maxTextureWidth1D;
@property (readonly) NSUInteger maxTextureWidth2D;
@property (readonly) NSUInteger maxTextureWidth3D;
@property (readonly) NSUInteger maxThreadgroupMemoryLength;
@property (readonly) ? maxThreadsPerThreadgroup;
@property (readonly) NSUInteger maxTileBuffers;
@property (readonly) NSUInteger maxTileInlineDataSize;
@property (readonly) NSUInteger maxTileSamplers;
@property (readonly) NSUInteger maxTileTextures;
@property (readonly) NSUInteger maxTotalComputeThreadsPerThreadgroup;
@property (readonly) NSUInteger maxVertexAmplificationCount;
@property (readonly) NSUInteger maxVertexAmplificationFactor;
@property (readonly) NSUInteger maxVertexAttributes;
@property (readonly) NSUInteger maxVertexBuffers;
@property (readonly) NSUInteger maxVertexInlineDataSize;
@property (readonly) NSUInteger maxVertexSamplers;
@property (readonly) NSUInteger maxVertexTextures;
@property (readonly) NSUInteger maxViewportCount;
@property (readonly) NSUInteger maxVisibilityQueryOffset;
@property (readonly) NSUInteger memorySize; // ivar: _memorySize
@property (nonatomic) BOOL metalAssertionsEnabled;
@property (readonly) NSUInteger minBufferNoCopyAlignmentBytes;
@property (readonly) NSUInteger minConstantBufferAlignmentBytes;
@property (readonly) NSUInteger minTilePixels;
@property (readonly, getter=isMsaa32bSupported) BOOL msaa32bSupported;
@property (readonly) NSString *name;
@property (readonly, getter=isPlacementHeapSupported) BOOL placementHeapSupported;
@property (copy, nonatomic) NSDictionary *pluginData;
@property (readonly, getter=areProgrammableSamplePositionsSupported) BOOL programmableSamplePositionsSupported;
@property (readonly, getter=isQuadDataSharingSupported) BOOL quadDataSharingSupported;
@property (readonly, getter=areRasterOrderGroupsSupported) BOOL rasterOrderGroupsSupported;
@property (readonly) NSUInteger readWriteTextureSupport;
@property (readonly) NSUInteger recommendedMaxWorkingSetSize;
@property (readonly) NSUInteger registryID;
@property (readonly, getter=isRemovable) BOOL removable;
@property (readonly) BOOL requiresRaytracingEmulation;
@property BOOL shaderDebugInfoCaching;
@property (readonly) NSUInteger sharedMemorySize;
@property (readonly) NSUInteger singleFPConfig;
@property (readonly) NSUInteger sparseTexturesSupport;
@property (readonly) NSUInteger sparseTileSizeInBytes;
@property (readonly) Class superclass;
@property (readonly) BOOL supportPriorityBand;
@property (readonly, nonatomic) BOOL supports2DLinearTexArraySPI;
@property (readonly, nonatomic) BOOL supports32BitFloatFiltering;
@property (readonly, nonatomic) BOOL supports32BitMSAA;
@property (readonly, nonatomic) BOOL supports32bpcMSAATextures;
@property (readonly, nonatomic) BOOL supports3DASTCTextures;
@property (readonly, nonatomic) BOOL supports3DBCTextures;
@property (readonly, nonatomic) BOOL supportsASTCHDRTextureCompression;
@property (readonly, nonatomic) BOOL supportsASTCTextureCompression;
@property (readonly, nonatomic) BOOL supportsAlphaYUVFormats;
@property (readonly, nonatomic) BOOL supportsAnisoSampleFix;
@property (readonly, nonatomic) BOOL supportsArgumentBuffersTier2;
@property (readonly, nonatomic) BOOL supportsArrayOfSamplers;
@property (readonly, nonatomic) BOOL supportsArrayOfTextures;
@property (readonly, nonatomic) BOOL supportsAtomicUlongVoidMinMax;
@property (readonly, nonatomic) BOOL supportsBCTextureCompression;
@property (readonly, nonatomic) BOOL supportsBaseVertexInstanceDrawing;
@property (readonly, nonatomic) BOOL supportsBfloat16Format;
@property (readonly, nonatomic) BOOL supportsBinaryArchives;
@property (readonly, nonatomic) BOOL supportsBinaryLibraries;
@property (readonly, nonatomic) BOOL supportsBlackOrWhiteSamplerBorderColors;
@property (readonly, nonatomic) BOOL supportsBufferBoundsChecking;
@property (readonly, nonatomic) BOOL supportsBufferPrefetchStatistics;
@property (readonly, nonatomic) BOOL supportsBufferWithIOSurface;
@property (readonly, nonatomic) BOOL supportsBufferlessClientStorageTexture;
@property (readonly, nonatomic) BOOL supportsCMPIndirectCommandBuffers;
@property (readonly, nonatomic) BOOL supportsCombinedMSAAStoreAndResolveAction;
@property (readonly, nonatomic) BOOL supportsCommandBufferJump;
@property (readonly, nonatomic) BOOL supportsCompressedTextureViewSPI;
@property (readonly, nonatomic) BOOL supportsComputeCompressedTextureWrite;
@property (readonly, nonatomic) BOOL supportsComputeMemoryBarrier;
@property (readonly, nonatomic) BOOL supportsConcurrentComputeDispatch;
@property (readonly, nonatomic) BOOL supportsCountingOcclusionQuery;
@property (readonly, nonatomic) BOOL supportsCustomBorderColor;
@property (readonly, nonatomic) BOOL supportsDepthClipMode;
@property (readonly, nonatomic) BOOL supportsDepthClipModeClampExtended;
@property (readonly, nonatomic) BOOL supportsDevicePartitioning;
@property (readonly, nonatomic) BOOL supportsDynamicControlPointCount;
@property (readonly, nonatomic) BOOL supportsDynamicLibraries;
@property (readonly, nonatomic) BOOL supportsExtendedXR10Formats;
@property (readonly, nonatomic) BOOL supportsExtendedYUVFormats;
@property (readonly, nonatomic) BOOL supportsFP32TessFactors;
@property (readonly, nonatomic) BOOL supportsFastMathInfNaNPropagation;
@property (readonly, nonatomic) BOOL supportsFixedLinePointFillDepthGradient;
@property (readonly, nonatomic) BOOL supportsFloat16BCubicFiltering;
@property (readonly, nonatomic) BOOL supportsFloat16InfNanFiltering;
@property (readonly, nonatomic) BOOL supportsForceSeamsOnCubemaps;
@property (readonly, nonatomic) BOOL supportsForkJoin;
@property (readonly, nonatomic) BOOL supportsFragmentBufferWrites;
@property (readonly, nonatomic) BOOL supportsFragmentOnlyEncoders;
@property (readonly, nonatomic) BOOL supportsFunctionPointers;
@property (readonly, nonatomic) BOOL supportsFunctionPointersFromRender;
@property (readonly, nonatomic) BOOL supportsGFXIndirectCommandBuffers;
@property (readonly, nonatomic) BOOL supportsGPUStatistics;
@property (readonly, nonatomic) BOOL supportsGlobalVariableRelocation;
@property (readonly, nonatomic) BOOL supportsGlobalVariableRelocationCompute;
@property (readonly, nonatomic) BOOL supportsGlobalVariableRelocationRender;
@property (readonly, nonatomic) BOOL supportsIABHashForTools;
@property (readonly, nonatomic) BOOL supportsImageBlockSampleCoverageControl;
@property (readonly, nonatomic) BOOL supportsImageBlocks;
@property (readonly, nonatomic) BOOL supportsIndirectDrawAndDispatch;
@property (readonly, nonatomic) BOOL supportsIndirectStageInRegion;
@property (readonly, nonatomic) BOOL supportsIndirectTessellation;
@property (readonly, nonatomic) BOOL supportsIndirectTextures;
@property (readonly, nonatomic) BOOL supportsIndirectWritableTextures;
@property (readonly, nonatomic) BOOL supportsInt64;
@property (readonly, nonatomic) BOOL supportsInterchangeTiled;
@property (readonly, nonatomic) BOOL supportsInvariantVertexPosition;
@property (readonly, nonatomic) BOOL supportsLargeFramebufferConfigs;
@property (readonly, nonatomic) BOOL supportsLateEvalEvent;
@property (readonly, nonatomic) BOOL supportsLayeredRendering;
@property (readonly, nonatomic) BOOL supportsLimitedYUVFormats;
@property (readonly, nonatomic) BOOL supportsLinearTexture2DArray;
@property (readonly, nonatomic) BOOL supportsLinearTextureFromSharedBuffer;
@property (readonly, nonatomic) BOOL supportsLossyCompression;
@property (readonly, nonatomic) BOOL supportsMSAADepthResolve;
@property (readonly, nonatomic) BOOL supportsMSAADepthResolveFilter;
@property (readonly, nonatomic) BOOL supportsMSAAStencilResolve;
@property (readonly, nonatomic) BOOL supportsMSAAStencilResolveFilter;
@property (readonly, nonatomic) BOOL supportsMemoryOrderAtomics;
@property (readonly, nonatomic) BOOL supportsMemorylessRenderTargets;
@property (readonly, nonatomic) BOOL supportsMipLevelsSmallerThanBlockSize;
@property (readonly, nonatomic) BOOL supportsMirrorClampToEdgeSamplerMode;
@property (readonly, nonatomic) BOOL supportsMutableTier1ArgumentBuffers;
@property (readonly, nonatomic) BOOL supportsNativeHardwareFP16;
@property (readonly, nonatomic) BOOL supportsNonPrivateDepthStencilTextures;
@property (readonly, nonatomic) BOOL supportsNonPrivateMSAATextures;
@property (readonly, nonatomic) BOOL supportsNonSquareTileShaders;
@property (readonly, nonatomic) BOOL supportsNonUniformThreadgroupSize;
@property (readonly, nonatomic) BOOL supportsNonZeroTextureWriteLOD;
@property (readonly, nonatomic) BOOL supportsNorm16BCubicFiltering;
@property (readonly, nonatomic) BOOL supportsOpenCLTextureWriteSwizzles;
@property (readonly, nonatomic) BOOL supportsPacked32TextureBufferWrites;
@property (readonly, nonatomic) BOOL supportsPipelineLibraries;
@property (readonly, nonatomic) BOOL supportsPlacementHeaps;
@property (readonly, nonatomic) BOOL supportsPostDepthCoverage;
@property (readonly, nonatomic) BOOL supportsPrimitiveMotionBlur;
@property (readonly, nonatomic) BOOL supportsPrimitiveRestartOverride;
@property (readonly, nonatomic) BOOL supportsProgrammableBlending;
@property (readonly, nonatomic) BOOL supportsProgrammableSamplePositions;
@property (readonly, nonatomic) BOOL supportsPublicXR10Formats;
@property (readonly, nonatomic) BOOL supportsPullModelInterpolation;
@property (readonly, nonatomic) BOOL supportsQuadGroup;
@property (readonly, nonatomic) BOOL supportsQuadReduction;
@property (readonly, nonatomic) BOOL supportsQuadShufflesAndBroadcast;
@property (readonly, nonatomic) BOOL supportsQueryTextureLOD;
@property (readonly, nonatomic) BOOL supportsRGBA10A2Gamma;
@property (readonly, nonatomic) BOOL supportsRTZRounding;
@property (readonly, nonatomic) BOOL supportsRasterOrderGroups;
@property (readonly, nonatomic) BOOL supportsRasterOrderGroupsColorAttachment;
@property (readonly) BOOL supportsRaytracing;
@property (readonly, nonatomic) BOOL supportsRaytracingFromRender;
@property (readonly, nonatomic) BOOL supportsReadWriteBufferArguments;
@property (readonly, nonatomic) BOOL supportsReadWriteTextureArguments;
@property (readonly, nonatomic) BOOL supportsReadWriteTextureArgumentsTier2;
@property (readonly, nonatomic) BOOL supportsReadWriteTextureCubeArguments;
@property (readonly, nonatomic) BOOL supportsRelaxedTextureViewRequirements;
@property (readonly, nonatomic) BOOL supportsRenderDynamicLibraries;
@property (readonly, nonatomic) BOOL supportsRenderMemoryBarrier;
@property (readonly, nonatomic) BOOL supportsRenderPassWithoutRenderTarget;
@property (readonly, nonatomic) BOOL supportsRenderTargetTextureRotation;
@property (readonly, nonatomic) BOOL supportsRenderTextureWrites;
@property (readonly, nonatomic) BOOL supportsRenderToLinearTextures;
@property (readonly, nonatomic) BOOL supportsSIMDGroup;
@property (readonly, nonatomic) BOOL supportsSIMDGroupMatrix;
@property (readonly, nonatomic) BOOL supportsSIMDReduction;
@property (readonly, nonatomic) BOOL supportsSIMDShuffleAndFill;
@property (readonly, nonatomic) BOOL supportsSIMDShufflesAndBroadcast;
@property (readonly, nonatomic) BOOL supportsSRGBwrites;
@property (readonly, nonatomic) BOOL supportsSamplerAddressModeClampToHalfBorder;
@property (readonly, nonatomic) BOOL supportsSamplerCompareFunction;
@property (readonly, nonatomic) BOOL supportsSeparateDepthStencil;
@property (readonly, nonatomic) BOOL supportsSeparateVisibilityAndShadingRate;
@property (readonly, nonatomic) BOOL supportsShaderBarycentricCoordinates;
@property (readonly, nonatomic) BOOL supportsShaderLODAverage;
@property (readonly, nonatomic) BOOL supportsShaderMinLODClamp;
@property (readonly, nonatomic) BOOL supportsSharedFunctionTables;
@property (readonly, nonatomic) BOOL supportsSharedStorageHeapResources;
@property (readonly, nonatomic) BOOL supportsSharedStorageTextures;
@property (readonly, nonatomic) BOOL supportsSharedTextureHandles;
@property (readonly, nonatomic) BOOL supportsSparseDepthAttachments;
@property (readonly, nonatomic) BOOL supportsSparseHeaps;
@property (readonly, nonatomic) BOOL supportsSparseTextures;
@property (readonly, nonatomic) BOOL supportsStackOverflowErrorCode;
@property (readonly, nonatomic) BOOL supportsStatefulDynamicLibraries;
@property (readonly, nonatomic) BOOL supportsStencilFeedback;
@property (readonly, nonatomic) BOOL supportsStreamingCodecSignaling;
@property (readonly, nonatomic) BOOL supportsTLS;
@property (readonly, nonatomic) BOOL supportsTessellation;
@property (readonly, nonatomic) BOOL supportsTexture2DMultisampleArray;
@property (readonly, nonatomic) BOOL supportsTextureCubeArray;
@property (readonly, nonatomic) BOOL supportsTextureOutOfBoundsReads;
@property (readonly, nonatomic) BOOL supportsTextureSwizzle;
@property (readonly, nonatomic) BOOL supportsTileShaders;
@property (readonly, nonatomic) BOOL supportsUnalignedVertexFetch;
@property (readonly, nonatomic) BOOL supportsVariableRateRasterization;
@property (readonly, nonatomic) BOOL supportsVertexAmplification;
@property (readonly, nonatomic) BOOL supportsViewportAndScissorArray;
@property (readonly, nonatomic) BOOL supportsWritableArrayOfTextures;
@property (readonly, nonatomic) BOOL supportsYCBCRFormats;
@property (readonly, nonatomic) BOOL supportsYCBCRFormats12;
@property (readonly, nonatomic) BOOL supportsYCBCRFormatsPQ;
@property (readonly, nonatomic) BOOL supportsYCBCRFormatsXR;
@property (readonly, nonatomic) BOOL supportsYCBCRPackedFormats12;
@property (readonly, nonatomic) BOOL supportsYCBCRPackedFormatsPQ;
@property (readonly, nonatomic) BOOL supportsYCBCRPackedFormatsXR;
@property (readonly) MTLTargetDeviceArchitecture *targetDeviceArchitecture;
@property (readonly) *MTLTargetDeviceArch targetDeviceInfo;


+(id)newTextureDescriptorFromIOSurface:(struct __IOSurface *)arg0 ;
+(id)newTextureDescriptorFromIOSurfaceProperties:(id)arg0 ;
+(void)registerDevices;
-(*void)getShaderCacheKeys;
-(BOOL)copyShaderCacheToPath:(id)arg0 ;
-(BOOL)deviceOrFeatureProfileSupportsFeatureSet:(NSUInteger)arg0 ;
-(BOOL)deviceSupportsFeatureSet:(NSUInteger)arg0 ;
-(BOOL)isCompatibleWithAccelerationStructure:(struct ? )arg0 ;
-(BOOL)mapShaderSampleBufferWithBuffer:(struct ? *)arg0 capacity:(NSUInteger)arg1 size:(NSUInteger)arg2 ;
-(BOOL)reserveGPUAddressRange:(struct _NSRange )arg0 ;
-(BOOL)respondsToSelector:(SEL)arg0 ;
-(BOOL)setResourcesPurgeableState:(*id)arg0 newState:(NSUInteger)arg1 oldState:(*NSUInteger)arg2 count:(int)arg3 ;
-(BOOL)supportsCounterSampling:(NSUInteger)arg0 ;
-(BOOL)supportsFamily:(NSInteger)arg0 ;
-(BOOL)supportsFeatureSet:(NSUInteger)arg0 ;
-(BOOL)supportsPrimitiveType:(NSUInteger)arg0 ;
-(BOOL)supportsRasterizationRateMapWithLayerCount:(NSUInteger)arg0 ;
-(BOOL)supportsSampleCount:(NSUInteger)arg0 ;
-(BOOL)supportsTextureSampleCount:(NSUInteger)arg0 ;
-(BOOL)supportsTextureWriteFPRoundingMode:(NSInteger)arg0 ;
-(BOOL)supportsTextureWriteRoundingMode:(NSInteger)arg0 ;
-(BOOL)supportsVertexAmplificationCount:(NSUInteger)arg0 ;
-(BOOL)validateDynamicLibrary:(id)arg0 state:(BOOL)arg1 error:(*id)arg2 ;
-(BOOL)validateDynamicLibraryURL:(id)arg0 error:(*id)arg1 ;
-(NSUInteger)debugPipelineOptions:(NSUInteger)arg0 includePipelinePerfStats:(BOOL)arg1 ;
-(NSUInteger)getSupportedCommandBufferErrorOptions;
-(NSUInteger)minLinearTextureAlignmentForPixelFormat:(NSUInteger)arg0 ;
-(NSUInteger)minimumLinearTextureAlignmentForPixelFormat:(NSUInteger)arg0 ;
-(NSUInteger)minimumTextureBufferAlignmentForPixelFormat:(NSUInteger)arg0 ;
-(NSUInteger)resourcePatchingTypeForResourceType:(NSUInteger)arg0 ;
-(id)_deviceWrapper;
-(id)copyIOSurfaceSharedTextureProperties:(id)arg0 ;
-(id)endCollectingPipelineDescriptors;
-(id)familyName;
-(id)getDepthStencilStateForBaseObject:(id)arg0 descriptor:(id)arg1 ;
-(id)getDynamicLibraryForBaseObject:(id)arg0 ;
-(id)getFunctionForBaseObject:(id)arg0 library:(id)arg1 ;
-(id)getSamplerStateForBaseObject:(id)arg0 descriptor:(id)arg1 ;
-(id)initWithBaseObject:(id)arg0 parent:(id)arg1 ;
-(id)loadDynamicLibrariesForComputeDescriptor:(id)arg0 error:(*id)arg1 ;
-(id)loadDynamicLibrariesForComputeDescriptor:(id)arg0 options:(NSUInteger)arg1 error:(*id)arg2 ;
-(id)loadDynamicLibrariesForFunction:(id)arg0 insertLibraries:(id)arg1 error:(*id)arg2 ;
-(id)loadDynamicLibrariesForFunction:(id)arg0 insertLibraries:(id)arg1 options:(NSUInteger)arg2 error:(*id)arg3 ;
-(id)newAccelerationStructureWithBuffer:(id)arg0 offset:(NSUInteger)arg1 ;
-(id)newAccelerationStructureWithDescriptor:(id)arg0 ;
-(id)newAccelerationStructureWithSize:(NSUInteger)arg0 ;
-(id)newAccelerationStructureWithSize:(NSUInteger)arg0 resourceIndex:(NSUInteger)arg1 ;
-(id)newArgumentEncoderWithArguments:(id)arg0 ;
-(id)newArgumentEncoderWithArguments:(id)arg0 structType:(*id)arg1 ;
-(id)newArgumentEncoderWithLayout:(id)arg0 ;
-(id)newBinaryArchiveWithDescriptor:(id)arg0 error:(*id)arg1 ;
-(id)newBinaryLibraryWithOptions:(NSUInteger)arg0 url:(id)arg1 error:(*id)arg2 ;
-(id)newBufferWithBytes:(*void)arg0 length:(NSUInteger)arg1 options:(NSUInteger)arg2 ;
-(id)newBufferWithBytes:(*void)arg0 length:(NSUInteger)arg1 options:(NSUInteger)arg2 gpuAddress:(NSUInteger)arg3 ;
-(id)newBufferWithBytesNoCopy:(*void)arg0 length:(NSUInteger)arg1 options:(NSUInteger)arg2 deallocator:(id)arg3 ;
-(id)newBufferWithBytesNoCopy:(*void)arg0 length:(NSUInteger)arg1 options:(NSUInteger)arg2 gpuAddress:(NSUInteger)arg3 deallocator:(id)arg4 ;
-(id)newBufferWithDescriptor:(id)arg0 ;
-(id)newBufferWithIOSurface:(struct __IOSurface *)arg0 ;
-(id)newBufferWithLength:(NSUInteger)arg0 options:(NSUInteger)arg1 ;
-(id)newBufferWithLength:(NSUInteger)arg0 options:(NSUInteger)arg1 gpuAddress:(NSUInteger)arg2 ;
-(id)newCommandQueue;
-(id)newCommandQueueWithDescriptor:(id)arg0 ;
-(id)newCommandQueueWithMaxCommandBufferCount:(NSUInteger)arg0 ;
-(id)newComputePipelineDescriptorWithSerializedData:(id)arg0 deserializationContext:(id)arg1 ;
-(id)newComputePipelineStateWithDescriptor:(id)arg0 error:(*id)arg1 ;
-(id)newComputePipelineStateWithDescriptor:(id)arg0 options:(NSUInteger)arg1 reflection:(*id)arg2 error:(*id)arg3 ;
-(id)newComputePipelineStateWithFunction:(id)arg0 error:(*id)arg1 ;
-(id)newComputePipelineStateWithFunction:(id)arg0 options:(NSUInteger)arg1 reflection:(*id)arg2 error:(*id)arg3 ;
-(id)newComputePipelineStateWithImageFilterFunctionsSPI:(id)arg0 imageFilterFunctionInfo:(struct ? *)arg1 error:(*id)arg2 ;
-(id)newCounterSampleBufferWithDescriptor:(id)arg0 error:(*id)arg1 ;
-(id)newDagStringWithGraphs:(id)arg0 ;
-(id)newDefaultLibrary;
-(id)newDefaultLibraryWithBundle:(id)arg0 error:(*id)arg1 ;
-(id)newDepthStencilStateWithDescriptor:(id)arg0 ;
-(id)newDynamicLibrary:(id)arg0 computeDescriptor:(id)arg1 error:(*id)arg2 ;
-(id)newDynamicLibrary:(id)arg0 error:(*id)arg1 ;
-(id)newDynamicLibraryFromURL:(id)arg0 error:(*id)arg1 ;
-(id)newDynamicLibraryWithURL:(id)arg0 error:(*id)arg1 ;
-(id)newDynamicLibraryWithURL:(id)arg0 options:(NSUInteger)arg1 error:(*id)arg2 ;
-(id)newEvent;
-(id)newFence;
-(id)newFunctionWithGLCoreIR:(*void)arg0 functionType:(NSUInteger)arg1 ;
-(id)newFunctionWithGLCoreIR:(*void)arg0 inputsDescription:(id)arg1 functionType:(NSUInteger)arg2 ;
-(id)newFunctionWithGLESIR:(*void)arg0 functionType:(NSUInteger)arg1 ;
-(id)newFunctionWithGLESIR:(*void)arg0 inputsDescription:(id)arg1 functionType:(NSUInteger)arg2 ;
-(id)newFunctionWithGLIR:(*void)arg0 functionType:(NSUInteger)arg1 ;
-(id)newFunctionWithGLIR:(*void)arg0 inputsDescription:(id)arg1 functionType:(NSUInteger)arg2 ;
-(id)newHeapWithDescriptor:(id)arg0 ;
-(id)newIndirectArgumentBufferLayoutWithStructType:(id)arg0 ;
-(id)newIndirectArgumentEncoderWithLayout:(id)arg0 ;
-(id)newIndirectCommandBufferWithDescriptor:(id)arg0 maxCommandCount:(NSUInteger)arg1 options:(NSUInteger)arg2 ;
-(id)newIndirectCommandBufferWithDescriptor:(id)arg0 maxCount:(NSUInteger)arg1 options:(NSUInteger)arg2 ;
-(id)newIndirectComputeCommandEncoderWithBuffer:(id)arg0 ;
-(id)newIndirectRenderCommandEncoderWithBuffer:(id)arg0 ;
-(id)newIntersectionFunctionTableWithDescriptor:(id)arg0 ;
-(id)newLateEvalEvent;
-(id)newLibraryWithCIFilters:(id)arg0 imageFilterFunctionInfo:(struct ? *)arg1 error:(*id)arg2 ;
-(id)newLibraryWithCIFiltersForComputePipeline:(id)arg0 imageFilterFunctionInfo:(struct ? *)arg1 error:(*id)arg2 ;
-(id)newLibraryWithDAG:(id)arg0 functions:(id)arg1 error:(*id)arg2 ;
-(id)newLibraryWithData:(id)arg0 error:(*id)arg1 ;
-(id)newLibraryWithDescriptor:(id)arg0 error:(*id)arg1 ;
-(id)newLibraryWithDescriptorSPI:(id)arg0 error:(*id)arg1 ;
-(id)newLibraryWithFile:(id)arg0 error:(*id)arg1 ;
-(id)newLibraryWithImageFilterFunctionsSPI:(id)arg0 imageFilterFunctionInfo:(struct ? *)arg1 error:(*id)arg2 ;
-(id)newLibraryWithSource:(id)arg0 options:(id)arg1 error:(*id)arg2 ;
-(id)newLibraryWithStitchedDescriptor:(id)arg0 error:(*id)arg1 ;
-(id)newLibraryWithStitchedDescriptorSPI:(id)arg0 error:(*id)arg1 ;
-(id)newLibraryWithURL:(id)arg0 error:(*id)arg1 ;
-(id)newPipelineLibraryWithFilePath:(id)arg0 error:(*id)arg1 ;
-(id)newRasterizationRateMapWithDescriptor:(id)arg0 ;
-(id)newRenderPipelineDescriptorWithSerializedData:(id)arg0 deserializationContext:(id)arg1 ;
-(id)newRenderPipelineStateWithDescriptor:(id)arg0 error:(*id)arg1 ;
-(id)newRenderPipelineStateWithDescriptor:(id)arg0 options:(NSUInteger)arg1 reflection:(*id)arg2 error:(*id)arg3 ;
-(id)newRenderPipelineStateWithTileDescriptor:(id)arg0 error:(*id)arg1 ;
-(id)newRenderPipelineStateWithTileDescriptor:(id)arg0 options:(NSUInteger)arg1 reflection:(*id)arg2 error:(*id)arg3 ;
-(id)newResourceGroupFromResources:(*id)arg0 count:(NSUInteger)arg1 ;
-(id)newSamplerStateWithDescriptor:(id)arg0 ;
-(id)newSharedEvent;
-(id)newSharedEventWithHandle:(id)arg0 ;
-(id)newSharedEventWithMachPort:(unsigned int)arg0 ;
-(id)newSharedTextureWithDescriptor:(id)arg0 ;
-(id)newSharedTextureWithHandle:(id)arg0 ;
-(id)newTextureLayoutWithDescriptor:(id)arg0 isHeapOrBufferBacked:(BOOL)arg1 ;
-(id)newTextureWithBytesNoCopy:(*void)arg0 length:(NSUInteger)arg1 descriptor:(id)arg2 deallocator:(id)arg3 ;
-(id)newTextureWithDescriptor:(id)arg0 ;
-(id)newTextureWithDescriptor:(id)arg0 iosurface:(struct __IOSurface *)arg1 plane:(NSUInteger)arg2 ;
-(id)newVisibleFunctionTableWithDescriptor:(id)arg0 ;
-(id)productName;
-(id)serializeRenderPipelineDescriptor:(id)arg0 ;
-(id)serializeStructType:(id)arg0 ;
-(id)unwrapMTLCompileOptions:(id)arg0 ;
-(id)unwrapMTLComputePipelineDescriptor:(id)arg0 ;
-(id)unwrapMTLFunctionDescriptor:(id)arg0 ;
-(id)unwrapMTLRelocations:(id)arg0 ;
-(id)unwrapMTLRenderPipelineDescriptor:(id)arg0 ;
-(id)unwrapMTLStitchedLibraryDescriptor:(id)arg0 ;
-(id)unwrapMTLTileRenderPipelineDescriptor:(id)arg0 ;
-(id)vendorName;
-(struct ? )accelerationStructureSizesWithDescriptor:(id)arg0 ;
-(struct ? )heapBufferSizeAndAlignWithLength:(NSUInteger)arg0 options:(NSUInteger)arg1 ;
-(struct ? )heapTextureSizeAndAlignWithDescriptor:(id)arg0 ;
-(struct ? )libraryCacheStats;
-(struct ? )pipelineCacheStats;
-(struct ? )sparseTileSizeWithTextureType:(NSUInteger)arg0 pixelFormat:(NSUInteger)arg1 sampleCount:(NSUInteger)arg2 ;
-(struct ? )tileSizeWithSparsePageSize:(NSUInteger)arg0 textureType:(NSUInteger)arg1 pixelFormat:(NSUInteger)arg2 sampleCount:(NSUInteger)arg3 ;
-(unsigned int)maximumComputeSubstreams;
-(void)_setDeviceWrapper:(id)arg0 ;
-(void)allowLibrariesFromOtherPlatforms;
-(void)compilerPropagatesThreadPriority:(BOOL)arg0 ;
-(void)convertSparsePixelRegions:(struct ? *)arg0 toTileRegions:(struct ? *)arg1 withTileSize:(struct ? )arg2 alignmentMode:(NSUInteger)arg3 numRegions:(NSUInteger)arg4 ;
-(void)convertSparseTileRegions:(struct ? *)arg0 toPixelRegions:(struct ? *)arg1 withTileSize:(struct ? )arg2 numRegions:(NSUInteger)arg3 ;
-(void)dealloc;
-(void)getDefaultSamplePositions:(struct ? *)arg0 count:(NSUInteger)arg1 ;
-(void)newComputePipelineStateWithDescriptor:(id)arg0 completionHandler:(id)arg1 ;
-(void)newComputePipelineStateWithDescriptor:(id)arg0 options:(NSUInteger)arg1 completionHandler:(id)arg2 ;
-(void)newComputePipelineStateWithFunction:(id)arg0 completionHandler:(id)arg1 ;
-(void)newComputePipelineStateWithFunction:(id)arg0 options:(NSUInteger)arg1 completionHandler:(id)arg2 ;
-(void)newLibraryWithDescriptor:(id)arg0 completionHandler:(id)arg1 ;
-(void)newLibraryWithSource:(id)arg0 options:(id)arg1 completionHandler:(id)arg2 ;
-(void)newLibraryWithStitchedDescriptor:(id)arg0 completionHandler:(id)arg1 ;
-(void)newRenderPipelineStateWithDescriptor:(id)arg0 completionHandler:(id)arg1 ;
-(void)newRenderPipelineStateWithDescriptor:(id)arg0 options:(NSUInteger)arg1 completionHandler:(id)arg2 ;
-(void)newRenderPipelineStateWithTileDescriptor:(id)arg0 completionHandler:(id)arg1 ;
-(void)newRenderPipelineStateWithTileDescriptor:(id)arg0 options:(NSUInteger)arg1 completionHandler:(id)arg2 ;
-(void)notifyExternalReferencesNonZeroOnDealloc:(id)arg0 ;
-(void)reserveResourceIndicesForResourceType:(NSUInteger)arg0 indices:(*NSUInteger)arg1 indexCount:(NSUInteger)arg2 ;
-(void)sampleTimestamps:(*NSUInteger)arg0 gpuTimestamp:(*NSUInteger)arg1 ;
-(void)setupMPSFunctionTable:(struct MPSFunctionTable *)arg0 ;
-(void)startCollectingPipelineDescriptors;
-(void)unloadShaderCaches;
-(void)unmapShaderSampleBuffer;


@end


#endif