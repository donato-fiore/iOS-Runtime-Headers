// Headers generated with ktool v2.0.0
// https://github.com/cxnder/ktool | pip3 install k2l
// Platform: IOS | Minimum OS: 15.0.0 | SDK: 15.0.0


#ifndef UIIMAGE_H
#define UIIMAGE_H

@class NSMapTable, CIImage, NSString, NSArray;
@protocol NSItemProviderReading, NSItemProviderWriting, UIItemProviderPresentationSizeProviding, UIItemProviderReading, UIItemProviderWriting, _UIMenuImageOrName, NSCopying, NSSecureCoding;

#import <Foundation/Foundation.h>

#import "UIImageConfiguration.h"
#import "_UIImageContent.h"
#import "UIImage.h"
#import "UIImageAsset.h"
#import "UIGraphicsImageRendererFormat.h"
#import "UIImageSymbolConfiguration.h"
#import "UITraitCollection.h"

@interface UIImage : NSObject <NSItemProviderReading, NSItemProviderWriting, UIItemProviderPresentationSizeProviding, UIItemProviderReading, UIItemProviderWriting, _UIMenuImageOrName, NSCopying, NSSecureCoding>

 {
    NSMapTable *_siblingImages;
    UIImageConfiguration *_configuration;
    UIEdgeInsets _contentInsets;
    CGSize _sizeInPixels;
    CGFloat _baselineOffsetFromBottom;
    CGFloat _capHeight;
    ? _imageFlags;
    _UIImageContent *_content;
}


@property (readonly, nonatomic) *CGImage CGImage;
@property (readonly, nonatomic, getter=_CGPDFPage) *CGPDFPage CGPDFPage;
@property (readonly, nonatomic, getter=_CGSVGDocument) *CGSVGDocument CGSVGDocument;
@property (readonly, nonatomic) CIImage *CIImage;
@property (readonly, nonatomic) UIImage *_asMenuElementImage;
@property (readonly, nonatomic) NSString *_asMenuElementImageName;
@property (readonly, nonatomic) CGFloat _capHeight;
@property (readonly, nonatomic) UIEdgeInsets _contentInsets;
@property (readonly, nonatomic) BOOL _hasContentInsets;
@property (nonatomic, setter=_setSubimageInsets:) UIEdgeInsets _subimageInsets;
@property (readonly, nonatomic) UIEdgeInsets alignmentRectInsets; // ivar: _alignmentRectInsets
@property (readonly, nonatomic) CGFloat baselineOffsetFromBottom;
@property (readonly, nonatomic) UIEdgeInsets capInsets;
@property (readonly, copy, nonatomic) UIImageConfiguration *configuration;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) CGFloat duration;
@property (readonly, nonatomic) BOOL flipsForRightToLeftLayoutDirection;
@property (readonly, nonatomic, getter=isFromStatusBarImageProvider) BOOL fromStatusBarImageProvider;
@property (readonly, nonatomic) BOOL hasBaseline;
@property (readonly) NSUInteger hash;
@property (readonly) NSUInteger hash;
@property (retain, nonatomic, setter=_setImageAsset:) UIImageAsset *imageAsset; // ivar: _imageAsset
@property (readonly, nonatomic) NSInteger imageOrientation;
@property (readonly, nonatomic) UIGraphicsImageRendererFormat *imageRendererFormat;
@property (readonly, nonatomic) NSArray *images;
@property (readonly, nonatomic) NSInteger leftCapWidth;
@property (readonly, nonatomic) CGSize preferredPresentationSizeForItemProvider;
@property (readonly, nonatomic) NSInteger renderingMode;
@property (readonly, nonatomic) NSInteger resizingMode;
@property (readonly, nonatomic) CGFloat scale;
@property (readonly, nonatomic) CGSize size;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly, copy, nonatomic) UIImageSymbolConfiguration *symbolConfiguration;
@property (readonly, nonatomic, getter=isSymbolImage) BOOL symbolImage;
@property (readonly, nonatomic) NSInteger topCapHeight;
@property (readonly, copy, nonatomic) UITraitCollection *traitCollection;
@property (readonly, copy, nonatomic) NSArray *writableTypeIdentifiersForItemProvider;
@property (readonly, copy, nonatomic) NSArray *writableTypeIdentifiersForItemProvider;


+(BOOL)_isCGImageAlphaMask:(struct CGImage *)arg0 ;
+(BOOL)supportsSecureCoding;
+(NSInteger)_idiomDefinedByPath:(id)arg0 ;
+(NSInteger)_mirroredImageOrientationForOrientation:(NSInteger)arg0 ;
+(NSUInteger)_scaleDefinedByPath:(id)arg0 ;
+(id)__systemImageNamed:(id)arg0 ;
+(id)__systemImageNamed:(id)arg0 compatibleWithTraitCollection:(id)arg1 ;
+(id)__systemImageNamed:(id)arg0 withConfiguration:(id)arg1 ;
+(id)__systemImageNamedSwift:(id)arg0 ;
+(id)_animatedImageNamed:(id)arg0 inBundle:(id)arg1 compatibleWithTraitCollection:(id)arg2 duration:(CGFloat)arg3 ;
+(id)_animatedResizableImageNamed:(id)arg0 inBundle:(id)arg1 compatibleWithTraitCollection:(id)arg2 capInsets:(struct UIEdgeInsets )arg3 resizingMode:(NSInteger)arg4 duration:(CGFloat)arg5 ;
+(id)_applicationIconImageForBundleIdentifier:(id)arg0 format:(int)arg1 ;
+(id)_applicationIconImageForBundleIdentifier:(id)arg0 format:(int)arg1 scale:(CGFloat)arg2 ;
+(id)_backgroundGradientWithStartColor:(id)arg0 andEndColor:(id)arg1 ;
+(id)_cachedImageForKey:(id)arg0 fromBlock:(id)arg1 ;
+(id)_defaultBackgroundGradient;
+(id)_deviceSpecificImageNamed:(id)arg0 ;
+(id)_deviceSpecificImageNamed:(id)arg0 inBundle:(id)arg1 ;
+(id)_generateCompositedSymbolImageForAsset:(id)arg0 usingLayers:(id)arg1 configuration:(id)arg2 alignUsingBaselines:(BOOL)arg3 ;
+(id)_iconForResourceProxy:(id)arg0 format:(int)arg1 ;
+(id)_iconForResourceProxy:(id)arg0 format:(int)arg1 options:(NSUInteger)arg2 ;
+(id)_iconForResourceProxy:(id)arg0 variant:(int)arg1 options:(int)arg2 variantsScale:(CGFloat)arg3 ;
+(id)_iconForResourceProxy:(id)arg0 variant:(int)arg1 variantsScale:(CGFloat)arg2 ;
+(id)_imageNamed:(id)arg0 withTrait:(id)arg1 ;
+(id)_imageWithCGPDFPage:(struct CGPDFPage *)arg0 ;
+(id)_imageWithCGPDFPage:(struct CGPDFPage *)arg0 scale:(CGFloat)arg1 orientation:(NSInteger)arg2 ;
+(id)_imageWithCGSVGDocument:(struct CGSVGDocument *)arg0 ;
+(id)_imageWithCGSVGDocument:(struct CGSVGDocument *)arg0 scale:(CGFloat)arg1 orientation:(NSInteger)arg2 ;
+(id)_kitImageNamed:(id)arg0 withTrait:(id)arg1 ;
+(id)_noiseImage;
+(id)_systemActionsImage;
+(id)_systemActionsImageWithConfiguration:(id)arg0 ;
+(id)_systemAddImage;
+(id)_systemAddImageWithColor:(id)arg0 ;
+(id)_systemAddImageWithConfiguration:(id)arg0 ;
+(id)_systemCameraImage;
+(id)_systemCameraImageWithConfiguration:(id)arg0 ;
+(id)_systemCloseImage;
+(id)_systemCloseImageCompatibleWithTraitCollection:(id)arg0 ;
+(id)_systemCloseImageWithConfiguration:(id)arg0 ;
+(id)_systemImageNamed:(id)arg0 ;
+(id)_systemImageNamed:(id)arg0 fallback:(id)arg1 ;
+(id)_systemImageNamed:(id)arg0 fallback:(id)arg1 withConfiguration:(id)arg2 ;
+(id)_systemImageNamed:(id)arg0 shape:(NSInteger)arg1 ;
+(id)_systemImageNamed:(id)arg0 shape:(NSInteger)arg1 fill:(NSInteger)arg2 ;
+(id)_systemImageNamed:(id)arg0 shape:(NSInteger)arg1 fill:(NSInteger)arg2 withConfiguration:(id)arg3 ;
+(id)_systemImageNamed:(id)arg0 variant:(NSUInteger)arg1 ;
+(id)_systemImageNamed:(id)arg0 variant:(NSUInteger)arg1 withConfiguration:(id)arg2 ;
+(id)_systemImageNamed:(id)arg0 withConfiguration:(id)arg1 ;
+(id)_systemImageNamed:(id)arg0 withConfiguration:(id)arg1 allowPrivate:(BOOL)arg2 ;
+(id)_systemRemoveImage;
+(id)_systemRemoveImageWithColor:(id)arg0 ;
+(id)_systemRemoveImageWithConfiguration:(id)arg0 ;
+(id)_tintedImageForSize:(struct CGSize )arg0 withTint:(id)arg1 effectsImage:(id)arg2 maskImage:(id)arg3 style:(int)arg4 ;
+(id)_tintedImageForSize:(struct CGSize )arg0 withTint:(id)arg1 maskImage:(id)arg2 effectsImage:(id)arg3 style:(int)arg4 ;
+(id)_tintedImageForSize:(struct CGSize )arg0 withTint:(id)arg1 maskImage:(id)arg2 effectsImage:(id)arg3 style:(int)arg4 edgeInsets:(struct UIEdgeInsets )arg5 ;
+(id)actionsImage;
+(id)actionsImageWithConfiguration:(id)arg0 ;
+(id)addImage;
+(id)addImageWithConfiguration:(id)arg0 ;
+(id)animatedImageNamed:(id)arg0 duration:(CGFloat)arg1 ;
+(id)animatedImageWithImages:(id)arg0 duration:(CGFloat)arg1 ;
+(id)animatedResizableImageNamed:(id)arg0 capInsets:(struct UIEdgeInsets )arg1 duration:(CGFloat)arg2 ;
+(id)animatedResizableImageNamed:(id)arg0 capInsets:(struct UIEdgeInsets )arg1 resizingMode:(NSInteger)arg2 duration:(CGFloat)arg3 ;
+(id)checkmarkImage;
+(id)checkmarkImageWithConfiguration:(id)arg0 ;
+(id)imageAtPath:(id)arg0 ;
+(id)imageFromAlbumArtData:(id)arg0 height:(int)arg1 width:(int)arg2 bytesPerRow:(int)arg3 cache:(BOOL)arg4 ;
+(id)imageNamed:(id)arg0 ;
+(id)imageNamed:(id)arg0 inBundle:(id)arg1 ;
+(id)imageNamed:(id)arg0 inBundle:(id)arg1 compatibleWithTraitCollection:(id)arg2 ;
+(id)imageNamed:(id)arg0 inBundle:(id)arg1 withConfiguration:(id)arg2 ;
+(id)imageNamed:(id)arg0 withConfiguration:(id)arg1 ;
+(id)imageWithCGImage:(struct CGImage *)arg0 ;
+(id)imageWithCGImage:(struct CGImage *)arg0 scale:(CGFloat)arg1 orientation:(NSInteger)arg2 ;
+(id)imageWithCIImage:(id)arg0 ;
+(id)imageWithCIImage:(id)arg0 scale:(CGFloat)arg1 orientation:(NSInteger)arg2 ;
+(id)imageWithContentsOfCPBitmapFile:(id)arg0 flags:(int)arg1 ;
+(id)imageWithContentsOfFile:(id)arg0 ;
+(id)imageWithData:(id)arg0 ;
+(id)imageWithData:(id)arg0 scale:(CGFloat)arg1 ;
+(id)kitImageNamed:(id)arg0 ;
+(id)objectWithItemProviderData:(id)arg0 typeIdentifier:(id)arg1 error:(*id)arg2 ;
+(id)preferredSymbolImageNamed:(id)arg0 ;
+(id)preferredSymbolImageNamed:(id)arg0 size:(NSInteger)arg1 compatibleWithTextStyle:(id)arg2 ;
+(id)preferredSymbolImageNamed:(id)arg0 size:(NSInteger)arg1 compatibleWithTextStyle:(id)arg2 traitCollection:(id)arg3 inBundle:(id)arg4 ;
+(id)readableTypeIdentifiersForItemProvider;
+(id)removeImage;
+(id)removeImageWithConfiguration:(id)arg0 ;
+(id)strokedCheckmarkImage;
+(id)strokedCheckmarkImageWithConfiguration:(id)arg0 ;
+(id)symbolImageNamed:(id)arg0 ;
+(id)symbolImageNamed:(id)arg0 size:(NSInteger)arg1 compatibleWithFont:(id)arg2 ;
+(id)symbolImageNamed:(id)arg0 size:(NSInteger)arg1 compatibleWithFont:(id)arg2 traitCollection:(id)arg3 inBundle:(id)arg4 ;
+(id)symbolImageNamed:(id)arg0 size:(NSInteger)arg1 weight:(NSInteger)arg2 compatibleWithFontSize:(CGFloat)arg3 ;
+(id)symbolImageNamed:(id)arg0 size:(NSInteger)arg1 weight:(NSInteger)arg2 compatibleWithFontSize:(CGFloat)arg3 traitCollection:(id)arg4 inBundle:(id)arg5 ;
+(id)systemImageNamed:(id)arg0 ;
+(id)systemImageNamed:(id)arg0 compatibleWithTraitCollection:(id)arg1 ;
+(id)systemImageNamed:(id)arg0 withConfiguration:(id)arg1 ;
+(int)_iconVariantForUIApplicationIconFormat:(int)arg0 idiom:(NSInteger)arg1 scale:(*CGFloat)arg2 ;
+(int)_iconVariantForUIApplicationIconFormat:(int)arg0 scale:(*CGFloat)arg1 ;
+(struct CGSize )_applyOrientation:(NSInteger)arg0 toContentSizeInPixels:(struct CGSize )arg1 ;
+(struct CGSize )_legibilityImageSizeForSize:(struct CGSize )arg0 style:(NSInteger)arg1 ;
+(struct UIEdgeInsets )_edgeInsetsForStylePresetNames:(id)arg0 scale:(CGFloat)arg1 traitCollection:(id)arg2 ;
+(void)_clearAssetCaches;
+(void)_dropResourceReferencesForURL:(id)arg0 ;
+(void)_flushCache:(id)arg0 ;
+(void)_flushSharedImageCache;
+(void)_loadImageFromURL:(id)arg0 completionHandler:(id)arg1 ;
+(void)initialize;
-(BOOL)_canEncodeWithName:(id)arg0 coder:(id)arg1 ;
-(BOOL)_hasExplicitAlignmentRectInsets;
-(BOOL)_hasExplicitBaseline;
-(BOOL)_hasExplicitContentInsets;
-(BOOL)_hasVisibleContentInRect:(struct CGRect )arg0 atScale:(CGFloat)arg1 ;
-(BOOL)_isAlphaMask;
-(BOOL)_isCached;
-(BOOL)_isColoredSymbolImage;
-(BOOL)_isDecompressing;
-(BOOL)_isHierarchicalColorSymbolImage;
-(BOOL)_isInvisibleAndGetIsTranslucent:(*BOOL)arg0 ;
-(BOOL)_isMultiColorSymbolImage;
-(BOOL)_isNamed;
-(BOOL)_isPDFVector;
-(BOOL)_isRTLImage;
-(BOOL)_isResizable;
-(BOOL)_isSVGVector;
-(BOOL)_isSubimage;
-(BOOL)_isTiledWhenStretchedToSize:(struct CGSize )arg0 ;
-(BOOL)_probeIsSeeThrough;
-(BOOL)_representsLayeredImage;
-(BOOL)_suppressesAccessibilityHairlineThickening;
-(BOOL)hasContentInsets;
-(BOOL)hasMidline;
-(BOOL)hasPadding;
-(BOOL)isEqual:(id)arg0 ;
-(BOOL)writeToCPBitmapFile:(id)arg0 flags:(int)arg1 ;
-(CGFloat)midlineOffsetFromCenter;
-(NSInteger)_effectiveRenderingModeWithSymbolConfiguration:(id)arg0 ;
-(NSInteger)_imageOrientationConsideringRTLForUserInterfaceLayoutDirection:(NSInteger)arg0 ;
-(NSUInteger)_numberOfHierarchyLayers;
-(id)_applicationIconImageForFormat:(int)arg0 precomposed:(BOOL)arg1 ;
-(id)_applicationIconImageForFormat:(int)arg0 precomposed:(BOOL)arg1 idiom:(NSInteger)arg2 scale:(CGFloat)arg3 ;
-(id)_applicationIconImageForFormat:(int)arg0 precomposed:(BOOL)arg1 scale:(CGFloat)arg2 ;
-(id)_applyBackdropViewSettings:(id)arg0 ;
-(id)_applyBackdropViewSettings:(id)arg0 allowImageResizing:(BOOL)arg1 ;
-(id)_applyBackdropViewSettings:(id)arg0 includeTints:(BOOL)arg1 includeBlur:(BOOL)arg2 ;
-(id)_applyBackdropViewSettings:(id)arg0 includeTints:(BOOL)arg1 includeBlur:(BOOL)arg2 allowImageResizing:(BOOL)arg3 ;
-(id)_applyBackdropViewStyle:(NSInteger)arg0 includeTints:(BOOL)arg1 includeBlur:(BOOL)arg2 ;
-(id)_applyBackdropViewStyle:(NSInteger)arg0 includeTints:(BOOL)arg1 includeBlur:(BOOL)arg2 graphicsQuality:(NSInteger)arg3 ;
-(id)_applyBackdropViewStyle:(NSInteger)arg0 includeTints:(BOOL)arg1 includeBlur:(BOOL)arg2 graphicsQuality:(NSInteger)arg3 allowImageResizing:(BOOL)arg4 ;
-(id)_bezeledImageWithShadowRed:(CGFloat)arg0 green:(CGFloat)arg1 blue:(CGFloat)arg2 alpha:(CGFloat)arg3 fillRed:(CGFloat)arg4 green:(CGFloat)arg5 blue:(CGFloat)arg6 alpha:(CGFloat)arg7 drawShadow:(BOOL)arg8 ;
-(id)_colorForFlattening;
-(id)_defaultConfiguration;
-(id)_doubleBezeledImageWithExteriorShadowRed:(CGFloat)arg0 green:(CGFloat)arg1 blue:(CGFloat)arg2 alpha:(CGFloat)arg3 interiorShadowRed:(CGFloat)arg4 green:(CGFloat)arg5 blue:(CGFloat)arg6 alpha:(CGFloat)arg7 fillRed:(CGFloat)arg8 green:(CGFloat)arg9 blue:(CGFloat)arg10 alpha:(CGFloat)arg11 ;
-(id)_flatImageWithColor:(id)arg0 ;
-(id)_flatImageWithWhite:(CGFloat)arg0 alpha:(CGFloat)arg1 ;
-(id)_flattenedImageWithTintColor:(id)arg0 ;
-(id)_identityDescription;
-(id)_imageByApplyingVariant:(NSUInteger)arg0 allowNone:(BOOL)arg1 ;
-(id)_imageByResizingToSize:(struct CGSize )arg0 ;
-(id)_imageForLegibilitySettings:(id)arg0 strength:(CGFloat)arg1 ;
-(id)_imageForLegibilitySettings:(id)arg0 strength:(CGFloat)arg1 alphaOnly:(BOOL)arg2 ;
-(id)_imageForLegibilityStyle:(NSInteger)arg0 ;
-(id)_imagePaddedByInsets:(struct UIEdgeInsets )arg0 ;
-(id)_imagePreparedForScreen:(id)arg0 ;
-(id)_imageScaledToProportion:(CGFloat)arg0 interpolationQuality:(int)arg1 ;
-(id)_imageThatSuppressesAccessibilityHairlineThickening;
-(id)_imageTintedWithColor:(id)arg0 flatten:(BOOL)arg1 renderingMode:(NSInteger)arg2 withUpdatedCGImage:(BOOL)arg3 ;
-(id)_imageWithBitmapRepresentation;
-(id)_imageWithBrightnessModifiedForLegibilityStyle:(NSInteger)arg0 ;
-(id)_imageWithContent:(id)arg0 ;
-(id)_imageWithContentInsets:(struct UIEdgeInsets )arg0 ;
-(id)_imageWithContentInsets:(struct UIEdgeInsets )arg0 withUpdatedCGImage:(BOOL)arg1 ;
-(id)_imageWithImageAsset:(id)arg0 ;
-(id)_imageWithImageAsset:(id)arg0 configuration:(id)arg1 ;
-(id)_imageWithSize:(struct CGSize )arg0 ;
-(id)_imageWithSize:(struct CGSize )arg0 content:(id)arg1 ;
-(id)_imageWithStylePresets:(id)arg0 tintColor:(id)arg1 traitCollection:(id)arg2 ;
-(id)_imageWithSymbolMetricsFromNamedVectorGlyph:(id)arg0 ;
-(id)_initWithCGPDFPage:(struct CGPDFPage *)arg0 ;
-(id)_initWithCGPDFPage:(struct CGPDFPage *)arg0 scale:(CGFloat)arg1 orientation:(NSInteger)arg2 ;
-(id)_initWithCGSVGDocument:(struct CGSVGDocument *)arg0 ;
-(id)_initWithCGSVGDocument:(struct CGSVGDocument *)arg0 scale:(CGFloat)arg1 orientation:(NSInteger)arg2 ;
-(id)_initWithCompositedSymbolImageLayers:(id)arg0 name:(id)arg1 ;
-(id)_initWithCompositedSymbolImageLayers:(id)arg0 name:(id)arg1 alignUsingBaselines:(BOOL)arg2 ;
-(id)_initWithContent:(id)arg0 orientation:(NSInteger)arg1 ;
-(id)_initWithContentsOfLCRFile:(id)arg0 ;
-(id)_initWithData:(id)arg0 immediateLoadWithMaxSize:(struct CGSize )arg1 scale:(CGFloat)arg2 renderingIntent:(NSUInteger)arg3 ;
-(id)_initWithData:(id)arg0 immediateLoadWithMaxSize:(struct CGSize )arg1 scale:(CGFloat)arg2 renderingIntent:(NSUInteger)arg3 cache:(BOOL)arg4 ;
-(id)_initWithData:(id)arg0 preserveScale:(BOOL)arg1 ;
-(id)_initWithData:(id)arg0 preserveScale:(BOOL)arg1 cache:(BOOL)arg2 ;
-(id)_initWithData:(id)arg0 preserveScale:(BOOL)arg1 cache:(BOOL)arg2 scale:(CGFloat)arg3 ;
-(id)_initWithData:(id)arg0 scale:(CGFloat)arg1 ;
-(id)_initWithFilledSystemImageNamed:(id)arg0 fillColor:(id)arg1 ;
-(id)_initWithFilledSystemImageNamed:(id)arg0 fillColor:(id)arg1 symbolColor:(id)arg2 ;
-(id)_initWithFilledSystemImageNamed:(id)arg0 fillColor:(id)arg1 symbolColor:(id)arg2 withName:(id)arg3 ;
-(id)_initWithIOSurface:(struct __IOSurface *)arg0 imageOrientation:(NSInteger)arg1 ;
-(id)_initWithIOSurface:(struct __IOSurface *)arg0 scale:(CGFloat)arg1 orientation:(NSInteger)arg2 ;
-(id)_initWithOtherImage:(id)arg0 ;
-(id)_metricsDescription;
-(id)_outlinePath;
-(id)_primitiveImageAsset;
-(id)_rasterizedImage;
-(id)_resizableImageWithCapMask:(int)arg0 ;
-(id)_resizableImageWithSubimageInsets:(struct UIEdgeInsets )arg0 resizeInsets:(struct UIEdgeInsets )arg1 ;
-(id)_serializedData;
-(id)_stretchableImageWithCapInsets:(struct UIEdgeInsets )arg0 ;
-(id)_swizzleContent:(id)arg0 ;
-(id)content;
-(id)copyWithZone:(struct _NSZone *)arg0 ;
-(id)flattenedImageWithColor:(id)arg0 ;
-(id)imageByAddingContentInsets:(struct UIEdgeInsets )arg0 ;
-(id)imageByAddingPadding:(struct UIEdgeInsets )arg0 ;
-(id)imageByApplyingSymbolConfiguration:(id)arg0 ;
-(id)imageByPreparingForDisplay;
-(id)imageByPreparingThumbnailOfSize:(struct CGSize )arg0 ;
-(id)imageFlippedForRightToLeftLayoutDirection;
-(id)imageWithAlignmentRectInsets:(struct UIEdgeInsets )arg0 ;
-(id)imageWithBaselineOffsetFromBottom:(CGFloat)arg0 ;
-(id)imageWithConfiguration:(id)arg0 ;
-(id)imageWithContentInsets:(struct UIEdgeInsets )arg0 ;
-(id)imageWithHorizontallyFlippedOrientation;
-(id)imageWithMidlineOffsetFromCenter:(CGFloat)arg0 ;
-(id)imageWithPadding:(struct UIEdgeInsets )arg0 ;
-(id)imageWithRenderingMode:(NSInteger)arg0 ;
-(id)imageWithSymbolConfiguration:(id)arg0 ;
-(id)imageWithTintColor:(id)arg0 ;
-(id)imageWithTintColor:(id)arg0 renderingMode:(NSInteger)arg1 ;
-(id)imageWithoutBaseline;
-(id)imageWithoutMidline;
-(id)init;
-(id)initWithCGImage:(struct CGImage *)arg0 ;
-(id)initWithCGImage:(struct CGImage *)arg0 imageOrientation:(NSInteger)arg1 ;
-(id)initWithCGImage:(struct CGImage *)arg0 scale:(CGFloat)arg1 orientation:(NSInteger)arg2 ;
-(id)initWithCIImage:(id)arg0 ;
-(id)initWithCIImage:(id)arg0 scale:(CGFloat)arg1 orientation:(NSInteger)arg2 ;
-(id)initWithCoder:(id)arg0 ;
-(id)initWithContentsOfFile:(id)arg0 ;
-(id)initWithContentsOfFile:(id)arg0 cache:(BOOL)arg1 ;
-(id)initWithData:(id)arg0 ;
-(id)initWithData:(id)arg0 cache:(BOOL)arg1 ;
-(id)initWithData:(id)arg0 scale:(CGFloat)arg1 ;
-(id)initWithIOSurface:(struct __IOSurface *)arg0 ;
-(id)initWithItemProviderData:(id)arg0 typeIdentifier:(id)arg1 error:(*id)arg2 ;
-(id)loadDataWithTypeIdentifier:(id)arg0 forItemProviderCompletionHandler:(id)arg1 ;
-(id)patternColor;
-(id)resizableImageWithCapInsets:(struct UIEdgeInsets )arg0 ;
-(id)resizableImageWithCapInsets:(struct UIEdgeInsets )arg0 resizingMode:(NSInteger)arg1 ;
-(id)stretchableImageWithLeftCapWidth:(NSInteger)arg0 topCapHeight:(NSInteger)arg1 ;
-(struct ? )_calculateEdgeStatistics;
-(struct ? )_calculateStatistics;
-(struct ? )_calculateStatisticsOfEdge:(BOOL)arg0 ;
-(struct CGColor *)_tiledPatternColor;
-(struct CGImage *)imageRef;
-(struct CGRect )_contentRectInPixels;
-(struct CGRect )_contentStretchInPixels;
-(struct CGSize )_sizeWithHairlineThickening:(BOOL)arg0 renderingEffects:(NSUInteger)arg1 forTraitCollection:(id)arg2 ;
-(struct UIEdgeInsets )_inverseAlignmentRectInsets;
-(struct UIEdgeInsets )contentInsets;
-(struct UIEdgeInsets )padding;
-(struct __IOSurface *)_copyIOSurface;
-(struct __IOSurface *)ioSurface;
-(void)_configureImage:(id)arg0 assumePreconfigured:(BOOL)arg1 ;
-(void)_drawImageForLegibilitySettings:(id)arg0 strength:(CGFloat)arg1 size:(struct CGSize )arg2 ;
-(void)_drawImageForLegibilitySettings:(id)arg0 strength:(CGFloat)arg1 size:(struct CGSize )arg2 alphaOnly:(BOOL)arg3 ;
-(void)_drawImageForLegibilityStyle:(NSInteger)arg0 size:(struct CGSize )arg1 ;
-(void)_encodeDataWithCoder:(id)arg0 imageName:(id)arg1 ;
-(void)_encodePropertiesWithCoder:(id)arg0 ;
-(void)_flipImageOrientationHorizontally;
-(void)_imageByCreatingBitmapRepresentationWithCompletionHandler:(id)arg0 ;
-(void)_preheatBitmapData;
-(void)_prepareForScreen:(id)arg0 completionHandler:(id)arg1 ;
-(void)_removeBaseline;
-(void)_removeBaselineExplicitly;
-(void)_setAlwaysStretches:(BOOL)arg0 ;
-(void)_setCached:(BOOL)arg0 ;
-(void)_setCapHeight:(CGFloat)arg0 ;
-(void)_setColorForFlattening:(id)arg0 ;
-(void)_setContentInsets:(struct UIEdgeInsets )arg0 ;
-(void)_setContentInsetsExplicitly:(struct UIEdgeInsets )arg0 ;
-(void)_setIsFlippedInRightToLeft;
-(void)_setMidlineOffsetFromCenter:(CGFloat)arg0 ;
-(void)_setNamed:(BOOL)arg0 ;
-(void)_setSuppressesAccessibilityHairlineThickening:(BOOL)arg0 ;
-(void)_setSymbolMetricsFromNamedVectorGlyph:(id)arg0 ;
-(void)compositeToPoint:(struct CGPoint )arg0 fromRect:(struct CGRect )arg1 operation:(int)arg2 fraction:(CGFloat)arg3 ;
-(void)compositeToPoint:(struct CGPoint )arg0 operation:(int)arg1 ;
-(void)compositeToPoint:(struct CGPoint )arg0 operation:(int)arg1 fraction:(CGFloat)arg2 ;
-(void)compositeToRect:(struct CGRect )arg0 fromRect:(struct CGRect )arg1 operation:(int)arg2 fraction:(CGFloat)arg3 ;
-(void)dealloc;
-(void)draw1PartImageInRect:(struct CGRect )arg0 ;
-(void)draw1PartImageInRect:(struct CGRect )arg0 fraction:(CGFloat)arg1 ;
-(void)draw1PartImageInRect:(struct CGRect )arg0 fraction:(CGFloat)arg1 operation:(int)arg2 ;
-(void)draw3PartImageWithSliceRects:(struct ? )arg0 inRect:(struct CGRect )arg1 ;
-(void)draw3PartImageWithSliceRects:(struct ? )arg0 inRect:(struct CGRect )arg1 fraction:(CGFloat)arg2 ;
-(void)draw3PartImageWithSliceRects:(struct ? )arg0 inRect:(struct CGRect )arg1 operation:(int)arg2 fraction:(CGFloat)arg3 ;
-(void)draw9PartImageWithSliceRects:(struct ? )arg0 inRect:(struct CGRect )arg1 ;
-(void)draw9PartImageWithSliceRects:(struct ? )arg0 inRect:(struct CGRect )arg1 fraction:(CGFloat)arg2 ;
-(void)draw9PartImageWithSliceRects:(struct ? )arg0 inRect:(struct CGRect )arg1 operation:(int)arg2 fraction:(CGFloat)arg3 ;
-(void)drawAsPatternInRect:(struct CGRect )arg0 ;
-(void)drawAtPoint:(struct CGPoint )arg0 ;
-(void)drawAtPoint:(struct CGPoint )arg0 blendMode:(int)arg1 alpha:(CGFloat)arg2 ;
-(void)drawInRect:(struct CGRect )arg0 ;
-(void)drawInRect:(struct CGRect )arg0 blendMode:(int)arg1 alpha:(CGFloat)arg2 ;
-(void)encodeWithCoder:(id)arg0 ;
-(void)prepareForDisplayWithCompletionHandler:(id)arg0 ;
-(void)prepareThumbnailOfSize:(struct CGSize )arg0 completionHandler:(id)arg1 ;


@end


#endif